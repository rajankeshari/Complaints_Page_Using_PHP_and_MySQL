<?php
class Student_attendance_model extends CI_Model
{
	public function __construct()
	{
		parent::__construct();
	}
	public function get_session_year()
	{
		$stu_id=$this->session->userdata('id');
		$this->load->database();
		$query=$this->db->query("SELECT DISTINCT session_year
		                        FROM reg_regular_form
								WHERE admn_no = '$stu_id' 
								");

		return $query->result();
	}


	// public function get_new_subjects($data)
	// {
	// 	$emp_id=$this->session->userdata('id');
	// 	$session_year=$data['session_year'];
	// 	$session=$data['session'];
	// 	$this->load->database();
	

	// 		$query= $this->db->query("SELECT subject_mapping.map_id as map_id,subject_mapping.semester as semester,subjects.name as sub_name ,subjects.id as sub_id, subject_mapping.branch_id as branch_id ,
	// 		 cs_branches.name as branch_name,subject_mapping.course_id as course_id,
	// 		 cs_courses.name as course_name, subject_mapping_des.coordinator as coordinator,subjects.type as sub_type
	// 		FROM subject_mapping 
	// 		INNER JOIN subject_mapping_des ON subject_mapping_des.map_id = subject_mapping.map_id
	// 		INNER JOIN subjects ON subjects.id = subject_mapping_des.sub_id
	// 		INNER JOIN cs_branches ON subject_mapping.branch_id=cs_branches.id
	// 		INNER JOIN cs_courses ON subject_mapping.course_id=cs_courses.id
	// 		WHERE session_year='$session_year' and session='$session' and emp_no=$emp_id and subject_mapping.course_id <> 'jrf' ;");

	// 	$result= $query->result();
	// 	//print_r($result);
	// 	return $result;
	
	// }



	public function get_subjects($data='')
	{
		$stu_id=$this->session->userdata('id');
		$this->load->database();
		if($data!== '')
		{
			$session = $data['session'];
			$session_year = $data['session_year'];
			
			$temp = $this->db->query("SELECT DISTINCT form_id as sem_form_id 
									  FROM reg_regular_form 
									  WHERE session ='$session'
									  AND session_year ='$session_year'
									  AND admn_no = '$stu_id'" );
									  
			$sem_form_id  = $temp->result();
			$sem_form_id = $sem_form_id[0]->sem_form_id;
			$sub_id= $this->db->query("SELECT DISTINCT subject_id, name 
			                          FROM subjects 
			                          WHERE id 
			                          IN (SELECT DISTINCT sub_id 
			                              FROM reg_regular_elective_opted 
			                              WHERE stu_sem_reg_subject.form_id =$sem_form_id)");
			$result= $sub_id->result();
			return $result;

		}
	}
	public function get_semester($data='')
	{
		$stu_id=$this->session->userdata('id');
		$session = $data['session'];
		$session_year = $data['session_year'];
		$this->load->database();
		$sem = $this->db->query("SELECT DISTINCT semester as semster
		                 FROM reg_regular_form
		                 WHERE session = '$session' 
		                 AND session_year = '$session_year' 
		                 AND admn_no = '$stu_id' 
						 AND hod_status ='1'
						 AND acad_status='1'
						 ");
		$sem = $sem->result();
		//print_r($sem);
		return $sem;
	}

	public function show_attendance_model($data)
	{
		$this->load->database();
		$session_year = $data['session_year'];
		$session = $data['session'];
		$stu_id = $data['stu_id'];
		$semester = $data['semester'];
		$query=$this->db->query("SELECT DISTINCT course_id, branch_id,form_id as sem_form_id,course_aggr_id
		                        FROM reg_regular_form
								WHERE admn_no = '$stu_id'
								AND session_year = '$session_year'
								AND session = '$session'
								AND hod_status ='1'
								AND acad_status='1'
								AND semester='$semester'
								");
		$que_result = $query->result();
                 
        //echo $this->db->last_query();
        $pos =strpos( strtolower($stu_id),'je');
       // echo "pos ".$pos;
        if($pos && ($semester =='1' || $semester =='2') ){
                    $q= $this->db->get_where('stu_section_data', array('admn_no'=>$stu_id,'session_year'=>$session_year));
                   $sec=$q->row()->section;
                   
                   //print_r( $semester);
		$course_id = $que_result[0]->course_id;
		$branch_id = $que_result[0]->branch_id;
		$sem_form_id = $que_result[0]->sem_form_id;
		
            

		$map = $this->db->query("SELECT DISTINCT map_id
		                         FROM subject_mapping
		                         WHERE course_id = 'comm'
		                         AND branch_id = 'comm'
		                         AND semester = '$semester'
		                         AND session = '$session'
                                 AND section='$sec' 
		                         AND session_year = '$session_year'
		                         ");
               // echo $this->db->last_query();die();
		$map_result = $map->result();
		//print_r($map_result);
		$map_id = $map_result[0]->map_id;
                
        } else {
		
		$course_id = $que_result[0]->course_id;
		$branch_id = $que_result[0]->branch_id;
		$sem_form_id = $que_result[0]->sem_form_id;
		$aggr_id = $que_result[0]->course_aggr_id;
		
            

		$map = $this->db->query("SELECT DISTINCT map_id
		                         FROM subject_mapping
		                         WHERE course_id = '$course_id'
		                         AND branch_id = '$branch_id'
		                         AND semester = '$semester'
		                         AND session = '$session'
		                         AND session_year = '$session_year' 
								 AND aggr_id='$aggr_id'
		                         ");
               //echo $this->db->last_query();
		$map_result = $map->result();
		//print_r($map_result);
		$map_id = $map_result[0]->map_id;

                }
		

		$subject= $this->db->query("SELECT DISTINCT subject_id, name ,id,type
			                        FROM subjects 
			                        WHERE elective=0 
			                        AND type<>'Non-Contact'
			                        AND id	
			                       	IN (SELECT DISTINCT sub_id as subject_id
		                            FROM subject_mapping_des
		                            WHERE map_id = '$map_id' ) 
									");
               // echo $this->db->last_query();


		($sub_name = $subject->result());
                
                $subject= $this->db->query("SELECT subject_id, name ,id,type
			                        FROM subjects 
			                        WHERE id 
			                        IN (SELECT DISTINCT sub_id as subject_id
		                            FROM reg_regular_elective_opted
		                            WHERE form_id = $sem_form_id) and type<>'Non-Contact'");
                 //echo $this->db->last_query();
             ($sub_name1 = $subject->result());
               
                $sub_name = array_merge($sub_name,$sub_name1);
		// $temp_query = $this->db->query("SELECT sub_id
		// 								FROM reg_regular_elective_opted
		// 								WHERE form_id = $sem_form_id ");
		// ($temp_query = $temp_query->result());
		// //echo ' <br><br> ';

		// foreach ($temp_query as $row) {
		// $temp = $this->db->query("SELECT subject_id, name ,id
		// 	                      FROM subjects 
		// 	                      WHERE id  = '$row->sub_id'
		// 	                      ");
		// 	($temp = $temp->result());
		// //echo ' <br><br> ';
		// 	array_push($sub_name,$temp[0]);
		// }
		//print_r($sub_name);

        $this->load->model('student_sem_form/x','',TRUE);
        $data=$this->x->get_hm_form($this->session->userdata('id'));
            foreach ($data as $dd) {
            //echo $dd->form_id;
            	if($dd->honours==1 && $dd->honour_hod_status=='Y'){
            		//echo $dd->honours_agg_id;
            	    $sub=$this->student_attendance_model->getSubjectviaAggrid($semester,$dd->honours_agg_id,$this->session->userdata('dept_id'));
                	//$this->load->view('student_sem_form/regular/hm');
                	$temp = array();
                //	$temp=array_column($sub,'name , id , subject_id');
                //	print_r($sub);
                	for($i=0;$i<count($sub['subjects']);$i++){
                		$temp[$i]['subject_id']=$sub['subjects'][$i]['subject_id'];
                		$temp[$i]['name']=$sub['subjects'][$i]['name'];
                		$temp[$i]['id']=$sub['subjects'][$i]['id'];
                		
                		$temp[$i]['type']="honour";
                	}
                //	print_r($temp);
               		$sub_name = array_merge($sub_name,$temp);
               	}
               	if($dd->minor==1 && $dd->minor_hod_status=='Y') 
                {
               		$m_ag_id=$this->x->get_hm_minor_details($dd->form_id);
               		//print_r($m_ag_id);
               		foreach ($m_ag_id as $ag) {
               		//	echo $ag->minor_agg_id;
               			$sub=$this->student_attendance_model->getSubjectviaAggrid($semester,$ag->minor_agg_id,$ag->dept_id);
               		//echo "Minor";
               	//		$sub_name = array_merge($sub_name,$sub);
               	//	print_r($sub);
               		$temp = array();
                		for($i=0;$i<=count($sub);$i++){

                			$temp[$i]['subject_id']=$sub['subjects'][$i]['subject_id'];
                			$temp[$i]['name']=$sub['subjects'][$i]['name'];
                			$temp[$i]['id']=$sub['subjects'][$i]['id'];	
                			$temp[$i]['type']="minor";
                		}
               			$sub_name = array_merge($sub_name,$temp);
               		}
               	}
            }
            $sub_name['map_id'] = $map_id;
         //   print_r($sub_name);
		return $sub_name;
	}

	private function get_numeric($val) {
            if (is_numeric($val)) { return $val + 0;} return 0;
    }

	function getSubjectviaAggrid($semester,$aggr_id,$dept,$g='',$ele=''){
            
            if($g){
                $semester = $semester."_".$g;
				$dept = 'cse';
            }
           //  echo $semester.",".$aggr_id.",".$dept;
            $this->load->model('course_structure/basic_model');
           $data=$this->basic_model->get_subjects_by_sem_and_dept($semester,$aggr_id,$dept);
          //print_r($data);
          $i=0;
           foreach($data as $da){
			if($ele ==1){
			$d['subjects'][$i]['sequence']=$da->sequence;
			$d['subjects'][$i]['id']=$da->id;
			$d['subjects'][$i]['subject_id']=$this->basic_model->get_subject_details($da->id)->subject_id;
			$d['subjects'][$i]['name']=$this->basic_model->get_subject_details($da->id)->name;
			}else{
			if(!is_float($this->get_numeric($da->sequence))){
			$d['subjects'][$i]['sequence']=$da->sequence;
			$d['subjects'][$i]['id']=$da->id;
			$d['subjects'][$i]['subject_id']=$this->basic_model->get_subject_details($da->id)->subject_id;
			$d['subjects'][$i]['name']=$this->basic_model->get_subject_details($da->id)->name;
			}
			}
			$i++;
		}
		
		// print_r($d);
		 return $d;
    }



	public function view_attendance_model($data,$result)
	{
		//var_dump($result);
		$stu_id = $data['stu_id'];
		$session_year  =$data['session_year'];
		$semester  =$data['semester'];
		$session = $data['session'];
		$subject  = array();
		$i = 0;
		foreach ($result['sub_name'] as $row) 
		{
			if(is_object($row)){
				$subject[$i++] = $row->id;
			} else {
				$subject[$i++] = $row["id"];
			}
		}
		//print_r($subject);

		$temp = $this->db->query("SELECT DISTINCT course_id , branch_id, form_id,course_aggr_id
		                         FROM reg_regular_form
		                         WHERE semester = $semester
		                         AND session_year = '$session_year'
		                         AND session = '$session'
		                         AND admn_no = '$stu_id' and hod_status='1' and acad_status='1' ");
		$temp = $temp->result();
	 //echo $this->db->last_query();
        $pos =strpos( strtolower($stu_id),'je');
       // echo "pos ".$pos;
        if($pos && ($semester =='1' || $semester =='2') ){
                    $q= $this->db->get_where('stu_section_data', array('admn_no'=>$stu_id,'session_year'=>$session_year));
                   $sec=$q->row()->section;
                   
                   //print_r( $semester);
		$course_id = $temp[0]->course_id;
		$branch_id = $temp[0]->branch_id;
		$sem_form_id = $temp[0]->form_id;
		
		
            

		$map = $this->db->query("SELECT DISTINCT map_id
		                         FROM subject_mapping
		                         WHERE course_id = 'comm'
		                         AND branch_id = 'comm'
		                         AND semester = '$semester'
		                         AND session = '$session'
                                 AND section='$sec'
		                         AND session_year = '$session_year'
								 
		                         ");
               // echo $this->db->last_query();
		$map_result = $map->result();
		//print_r($map_result);
		$map_id = $map_result[0]->map_id;
                
                }else{
		
		//print_r( $semester);
		$course_id = $temp[0]->course_id;
		$branch_id = $temp[0]->branch_id;
		$sem_form_id = $temp[0]->form_id;
		$aggr_id = $temp[0]->course_aggr_id;
		
            

		$map = $this->db->query("SELECT DISTINCT map_id
		                         FROM subject_mapping
		                         WHERE course_id = '$course_id'
		                         AND branch_id = '$branch_id'
		                         AND semester = $semester
		                         AND session = '$session'
		                         AND session_year = '$session_year'
								 AND aggr_id='$aggr_id'
		                         ");
            //   echo $this->db->last_query();
		$map_result = $map->result();
		//print_r($map_result);
		$map_id = $map_result[0]->map_id;
                }
		//print_r($result);
		

		for ($i= 0;$i < count($subject);$i++)
		{
			//$group_no = $result['sub_name'][$i]->group_no;
			$temp1= $this->db->query("SELECT  date
					                 FROM absent_table
					                 WHERE sub_id  = '$subject[$i]'
					                 AND admn_no = '$stu_id'
					                 AND map_id = '$map_id'
					                  ");
			$temp[$i] = $temp1->result();
			//echo $this->db->last_query();
			$temp[$i]['count'] = count($temp[$i]);

			$temp2 = $this->db->query("SELECT total_class
									FROM total_class_table
									WHERE map_id = '$map_id'
									AND sub_id = '$subject[$i]'
									  ");
			$temp3 = $temp2->result();
			//echo $temp3->total;
			//print_r($temp3);
			if (count($temp3))
			{
				$temp[$i]['total']  = $temp3[0]->total_class ;
			}
			else
			{
			 	$temp[$i]['total'] = 'class not started';
			}
		}

		return $temp;

	
	}

	public function get_total_group($session_id,$sub_id)
	{
		$this->load->database();
		$this->db->select('*');
		$this->db->from('prac_group_attendance');
		$this->db->where('session_id',$session_id);
		$this->db->where('sub_id',$sub_id);
		$this->db->order_by("group_no","asc");
		$query=$this->db->get();
		return $query->result();
	}

	 public function get_new_student($data)
	{
      
		$sub=$data['sub_id'];
		$session = $data['session'];
		$this->load->database();
		if($session === 'Summer')
			$sub_table = 'reg_summer_subject';
		else
			$sub_table = 'reg_regular_elective_opted';
		$subs=$this->get_subject_id($sub,$data);
		$this->db->select('form_id');
		$this->db->from($sub_table);
		$w=""; $i=0;
			foreach($subs as $c){
				if($i==0){$w="(`sub_id`='$c->id')";}else{$w.=" OR (`sub_id`='$c->id')"; }
			$i++;}
			$this->db->where($w);
		//$this->db->where('sub_id',$sub);
		$query=$this->db->get();	
		
		//echo $this->db->last_query(); die();
		//if($query->num_rows() >0){
		$data['form_no'] = $query->result();
		//}else{
		//	$data['form_no']=array();
		//}     
      		//if(count($data['form_no']) < 5) $data['form_no'] =array();
	//	print_r($this->get_admn($data));
		return $this->get_admn($data);
	}
 	 function get_subject_id($id,$data){
			// echo $data['aggr_id'];
          
         $q=  $this->db->select('subject_id')->where('id',$id)->get('subjects')->row();
		 $r="select subjects.id from subjects join course_structure on subjects.id=course_structure.id where subjects.subject_id=? and course_structure.aggr_id=?";
		 $get=$this->db->query($r,array($q->subject_id,$data['aggr_id']))->result();
		 //echo $this->db->last_query();
         //$get=$this->db->select('id')->where('subject_id',$q->subject_id)->get('subjects')->result();
         return $get;
       } 

       public function get_admn($data)
	{
          
		$session_year = $data['session_year'];
		$session=$data['session'];
		$branch=$data['branch_id'];
		$semester=$data['semester'];
		$course=$data['course_id'];
               
               // print_r($data);
		$this->load->database();
		$tmp=array();
		for($i=0;$i<count($data['form_no']);$i++)
		{
			$tmp[$i]=$data['form_no'][$i]->form_id;
		}
		if($i>0)
		{
			$form_table = 'reg_regular_form';
			if($session === 'Summer')
				$form_table = 'reg_summer_form';
			$this->db->select('admn_no');
			$this->db->from($form_table);
			$this->db->where('session_year',$session_year);
			$this->db->where('session',$session);
			$this->db->where('branch_id',$branch);
			$this->db->where('course_id',$course);
			$this->db->where('semester',$semester);
                        $this->db->where('course_aggr_id',$data['aggr_id']);
			$this->db->where('hod_status','1');
			$this->db->where('acad_status','1');
			$this->db->where_in('form_id',$tmp);
			$query=$this->db->get();
			
			$data['stu_admn'] = $query->result();
			return $this->get_name($data);
		}
		else
		{
			$this->db->select('admn_no');
			$this->db->from('reg_regular_form');
			$this->db->where('session_year',$session_year);
			$this->db->where('session',$session);
			$this->db->where('branch_id',$branch);
			$this->db->where('course_id',$course);
			$this->db->where('semester',$semester);
            $this->db->where('course_aggr_id',$data['aggr_id']);
            $this->db->where('hod_status','1');
			$this->db->where('acad_status','1');
			$query=$this->db->get();
			//echo $this->db->last_query();
			$data['stu_admn'] = $query->result();
			return $this->get_name($data);
		}
	}


	public function get_session_id($session,$session_year,$semester,$branch_id,$course_id)
	{
		$this->load->database();
		$this->db->select('session_id');
		$this->db->from('session_track');
		$this->db->where('session',$session);
		$this->db->where('session_year',$session_year);
		$this->db->where('semester',$semester);
		$this->db->where('branch_id',$branch_id);
		$this->db->where('course_id',$course_id);
		$query=$this->db->get();
		return $query->result();
	}

	public function insert_into_session_track($session,$session_year,$semester,$branch_id,$course_id)
	{
		$this->load->database();
		$query="INSERT INTO session_track (session,session_year,semester,branch_id,course_id) VALUES('$session','$session_year',$semester,'$branch_id','$course_id')";
	    $this->db->query($query);
	}


	public function get_rep_student($data,$sub_id)
	{
		
		
		$this->load->database();
		$this->db->select('form_id');
		$this->db->from('reg_other_subject');
		$this->db->where('sub_id',$sub_id);
		$query=$this->db->get();	
		$data['rep_form_no'] = $query->result();
		//if(count($data['rep_form_no'])!=0)
	    	return $this->get_rep_admn($data);
	    //else
	    //	return $data['rep_form_no'];
	}

	public function get_rep_admn($data)
	{
		$session_year = $data['session_year'];
		$session=$data['session'];
		$branch_id=$data['branch_id'];
		$semester=$data['semester'];
		$course_id=$data['course_id'];
		$this->load->database();
		$tmp=array();
		for($i=0;$i<count($data['rep_form_no']);$i++)
		{
			$tmp[$i]=$data['rep_form_no'][$i]->form_id;
		}
		if($i>0)
		{
			$this->db->select('admn_no');
			$this->db->from('reg_other_form');
			$this->db->where('session_year',$session_year);
			$this->db->where('session',$session);
			$this->db->where('branch_id',$branch_id);
			$this->db->where('course_id',$course_id);
			$this->db->where('semester',$semester);
			$this->db->like('reason','repeater');
//			$this->db->where('hod_status','1');
//			$this->db->where('acdmic_status','1');
			$this->db->where_in('form_id',$tmp);
                        $this->db->where('course_aggr_id',$data['aggr_id']);
			$query=$this->db->get();
			$data['stu_rep_admn'] = $query->result();
			//if(count($data['stu_rep_admn'])!=0)
	    	return $this->get_rep_name($data);
	    	//else
	    	//return $data['stu_rep_admn'];
		}		
	}

	public function get_rep_name($data)
	{
		$tmp=array();
		for($i=0;$i<count($data['stu_rep_admn']);$i++)
		{
			$tmp[$i]=$data['stu_rep_admn'][$i]->admn_no;
		}
		if($i>0)
		{
			$this->load->dbutil();
			$this->load->database();
			$this->db->select('id,first_name,middle_name,last_name');
			$this->db->from('user_details');
		//	$this->db->like('id','2012');
			$this->db->where_in('id',$tmp);
			$this->db->order_by("id","asc");
			$query=$this->db->get();
			return $query->result();
		}		
	}
	public function get_stu_info($data)
	{
		$this->load->database();
		
		$stu_id = $data['stu_id'];
		$semester = $data['semester'];
		$query=$this->db->query("SELECT DISTINCT session,session_year
		                        FROM reg_regular_form
								WHERE admn_no = '$stu_id'
								AND hod_status ='1'
								AND acad_status='1'
								AND semester='$semester'
								");
		$que_result = $query->result();
        return $que_result;
	}
	public function get_name($data)
	{
		$tmp=array();
		for($i=0;$i<count($data['stu_admn']);$i++)
		{
		//	echo $data['form_no'][$i]->sem_form_id;
			$tmp[$i]=$data['stu_admn'][$i]->admn_no;
		}
		if($i>0)
		{
			$this->load->dbutil();
			$this->load->database();
			$this->db->select('id,first_name,middle_name,last_name');
			$this->db->from('user_details');
		//	$this->db->like('id','2012');
			$this->db->where_in('id',$tmp);
			$this->db->order_by("id","asc");
			$query=$this->db->get();
		
	
			return $query->result();
		}
	}


	public function get_total_class($subject_id,$map_id)
	{
	
            $r=$this->db->query('select * from prac_group_attendance a where a.sub_id=?',array($subject_id));
            //echo $this->db->last_query();
            if($r->num_rows() >0  ){
                    $group= $this->db->query('select a.group_no from absent_table a where a.sub_id=? and a.admn_no=? limit 1',array($subject_id,$this->session->userdata('id')));
                    
                    if($group->num_rows() > 0 ){
                        $query = $this->db->query("SELECT date
		                FROM class_engaged
		                WHERE sub_id =? and map_id=? and group_no=? ",array($subject_id,$map_id,$group->row()->group_no));
                        echo $this->db->last_query();
                            $result = $query->result();
                    }else{
                        $query = $this->db->query("SELECT date
		                FROM class_engaged
		                WHERE sub_id =? and map_id=? ",array($subject_id,$map_id));
		$result = $query->result();
                    }
            }else{
		$query = $this->db->query("SELECT date
		                FROM class_engaged
		                WHERE sub_id =? and map_id=? ",array($subject_id,$map_id));
		$result = $query->result();
            }
		return $result;
		($result);
	}
	
	public function getExtraAttendance($id,$admn_no){
	//	echo "SELECT count from Attendance_remark_table where sub_id='$id' and admn_no='$admn_no' order_by desc";
		$query = $this->db->query("SELECT count from attendance_remark_table where sub_id='$id' and admn_no='$admn_no' order by 'session_id' desc");
		if($query->num_rows()> 0)
			return $query->num_rows();
		return 0;
	}

}

?>