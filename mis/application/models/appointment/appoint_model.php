<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class appoint_model extends CI_Model
{
	private $tabulation='iitism';
    function __construct()
    {
        parent::__construct();
    }


 
function get_badge_count($appointer_auth,$status) {       

        $CI = &get_instance();       
         $this->db2 = $CI->load->database($this->tabulation, TRUE);         
       
		 
		 if($status=='all'){
		  $where= " where appointer_auth_id=? ";              
          $secure_array = array($appointer_auth);
		 }
		 else{
   		  $where= " where status=? and appointer_auth_id=? ";              
          $secure_array = array($status, $appointer_auth);
		  }
    
            $sql="  select count(*) as appiont_ctr, date_format( appoint_timestamp,'%d-%m-%Y') as appoint_date from  appoint_master  $where  group by   date_format( appoint_timestamp,'%d-%m-%Y') ";            

           $query = $this->db2->query($sql,$secure_array);
           //echo $this->db2->last_query(); die();

        if ($query->num_rows() > 0)
             return $query->result();
        else 
            return 0;
// throw new Exception(($this->db2->_error_message()==null?"Internal Error Occured":$this->db2->_error_message()));
        
    }
	
/*function get_badge_counttwo($appointer_auth,$status) {       
       //  try{
		 $CI = &get_instance();       
         $this->db2 = $CI->load->database($this->tabulation, TRUE);         
       
		 
		 if($status=='all'){
		  $where= " where appointer_auth_id=? ";              
          $secure_array = array($appointer_auth);
		 }
		 else{
   		  $where= " where status=? and appointer_auth_id=? ";              
          $secure_array = array($status, $appointer_auth);
		  }
    
            $sql="  select count(*) as appiont_ctr, date_format( appoint_timestamp,'%d-%m-%Y') as appoint_date from  appoint_master  $where  group by   date_format( appoint_timestamp,'%d-%m-%Y') ";            

           $query = $this->db2->query($sql,$secure_array);
           //echo $this->db->last_query(); die();

        if ($query->num_rows() > 0)
             return $query->result();
        else 
            return 0;
  throw new Exception(($this->db2->_error_message()==null?"Internal Error Occured":$this->db2->_error_message()));
        
    }*/
	
	
	function get_appointee_name_given_date($appoint_date,$appointer_auth,$status) {       
           $CI = &get_instance();       
         $this->db2 = $CI->load->database($this->tabulation, TRUE);         
		 if($status=='all'){
		  $where= " where  date_format( appoint_timestamp,'%d-%m-%Y')=? and  appointer_auth_id=?  ";              
          $secure_array = array($appoint_date,$appointer_auth);
		 }
		 else{
   		  $where= " where date_format( appoint_timestamp,'%d-%m-%Y')=?  and status=? and appointer_auth_id=? ";              
          $secure_array = array($appoint_date,$status, $appointer_auth);
		  }
    
            $sql="  
                   select  x.id as appointee_master_key,(case  when x.appointee_type ='I'  then 'Internal' else 'External' end) as appointee_type  ,  concat_ws(' ',u.salutation,u.first_name,u.middle_name,u.last_name)  as name,
                    d.name as department  from   
                    (select appointee_emp_id , appointee_type,id from  appoint_master $where)x
                     left join user_details u on
                    u.id= x.appointee_emp_id
                     left join departments_android d on
                      d.id=u.dept_id      
              ";            

           $query = $this->db2->query($sql,$secure_array);
          // echo $this->db2->last_query(); die();

        if ($query->num_rows() > 0)
             return $query->result();
        else 
            return 0;
        
    }
	
	
	function get_appoint_details_by_id($id){
	  $CI = &get_instance();       
         $this->db2 = $CI->load->database($this->tabulation, TRUE);         
	  $secure_array = array($id);
	$sql="select x.*,  concat_ws(' ',u.salutation,u.first_name,u.middle_name,u.last_name)  as name, ebd.designation,
d.name as department ,u.email,uod.mobile_no
from  
  (select appointee_emp_id,(case  when appointee_type ='I'  then 'Internal' else 'External' end) as appointee_type, date_format( appoint_timestamp,'%d-%m-%Y %h:%i:%s %p') as appoint_date,venue,purpose,other_info from 
   appoint_master where id=?)x
   left join user_details u on
   u.id= x.appointee_emp_id
    left join user_other_details uod on
    uod.id= x.appointee_emp_id
    left join emp_basic_details ebd on
        ebd.emp_no= x.appointee_emp_id
   left join departments_android d on
   d.id=u.dept_id
   ";
	   $query = $this->db2->query($sql,$secure_array);
          // echo $this->db2->last_query(); die();

        if ($query->num_rows() > 0)
             return $query->result();
        else 
            return 0;
	}
	
    function appointer__appointee_details(){
    	$q="SELECT usr.id AS EMPNO, UCASE(CONCAT(ud.salutation,' ',ud.first_name,' ',ud.middle_name,' ',ud.last_name)) AS NAME
			FROM users usr
			LEFT JOIN user_details ud ON ud.id=usr.id where usr.auth_id='emp' order by ud.first_name ,ud.middle_name , ud.last_name ";
		if($query=$this->db->query($q)){
			if($query->num_rows()>0){
				return $query->result();
			}
			else{
				return false;
			}
		}
		else{
			return false;
		}
    }

	
	 function get_appointee_all_given_date($appoint_date=null,$appointer_auth,$user_id,$status) {       
	 //$this->load->database('default');
       //  $CI = &get_instance();       
      //   $this->db2 = $CI->load->database($this->tabulation, TRUE);         
		 if($status=='all'){
                     if($appoint_date==null){
                    $where= " where   appointer_auth_id=? and appointer_emp_id =? ";  
                      $secure_array = array($appointer_auth,$user_id);
                     } else{
		      $where= " where  date_format( appoint_timestamp,'%d-%m-%Y')=? and  appointer_auth_id=? and appointer_emp_id =? ";              
                       $secure_array = array($appoint_date,$appointer_auth,$user_id);
                     }
		 }
		 else{
                     if($appoint_date==null){
                      $where= " where status=? and appointer_auth_id=? and appointer_emp_id =? ";              
                       $secure_array = array($status, $appointer_auth,$user_id);
                     }else{
   		      $where= " where date_format( appoint_timestamp,'%d-%m-%Y')=?  and status=? and appointer_auth_id=? and appointer_emp_id =? ";              
                       $secure_array = array($appoint_date,$status, $appointer_auth,$user_id);
                     }
		  }

 $sql="     select  x.*, 
  
  (case  when x.appttype ='I'  then concat_ws(' ',u.salutation,u.first_name,u.middle_name,u.last_name)  else aoa.name end) as name,
  (case  when x.appttype ='I'  then dg.name  else aoa.designation end) as designation,
    (case  when x.appttype ='I'  then u.email  else aoa.email end) as email,
     (case  when x.appttype ='I'  then uod.mobile_no else aoa.contact end) as mobile_no,
  (case  when x.appttype ='I'  then d.name  else aoa.dept end) as department,alcm.name as status_name,alcm.priority,
  (CASE WHEN x.appttype ='I' THEN null ELSE aoa.address END) AS address

from  
  (select appointer_emp_id,id as appointee_master_key,appointee_emp_id,(case  when appointee_type ='I'  then 'Internal' else 'External' end) as appointee_type, appointee_type as appttype, appoint_timestamp,date_format( appoint_timestamp,'%d-%m-%Y %h:%i:%s %p') as appoint_date,venue,purpose,other_info,`status`  from  appoint_master  $where)x
      inner join users on x.appointer_emp_id=users.id
   left join user_details u on
   u.id= x.appointee_emp_id
   left join user_other_details uod on
    uod.id= x.appointee_emp_id
    left join emp_basic_details ebd on
    ebd.emp_no= x.appointee_emp_id
     left join designations dg on dg.id=ebd.designation
   left join departments_android d on
    d.id=u.dept_id
   left join appoint_life_cycle_master alcm on alcm.id=x.status
   left join appoint_outsider_appointee  aoa on aoa.id=x.appointee_emp_id
    order by  alcm.priority desc,  UNIX_TIMESTAMP(x.appoint_timestamp) 
     ";            

           $query = $this->db->query($sql,$secure_array);
       //  echo $this->db->last_query(); die();

        if ($query->num_rows() > 0)
             return $query->result();
        else 
            return 0;
        
	 }
	
	function get_all_task_given_date($appoint_date=null,$appointer_auth,$user_id,$status) {       
	
	 if($status=='all'){
                     if($appoint_date==null){
                    $where= " where   assigner_auth_id=? and assigner_emp_id =? ";  
                      $secure_array = array($appointer_auth,$user_id);
                     } else{
		       $where= " where  date_format( assigned_timestamp,'%d-%m-%Y')=? and  assigner_auth_id=? and assigner_emp_id =? ";              
          $secure_array = array($appoint_date,$appointer_auth,$user_id);
                     }
		 }
		 else{
                     if($appoint_date==null){
                      $where= " where  status=? and assigner_auth_id=? and assigner_emp_id =? ";              
                       $secure_array = array($status, $appointer_auth,$user_id);
                     }else{
   		      $where= " where date_format( assigned_timestamp,'%d-%m-%Y')=?  and status=? and assigner_auth_id=? and assigner_emp_id =? ";              
          $secure_array = array($appoint_date,$status, $appointer_auth,$user_id);
                     }
		  }
	
       
	   
	
 $sql="    SELECT x.*, (CASE WHEN x.appttype ='I' THEN CONCAT_WS(' ',u.salutation,u.first_name,u.middle_name,u.last_name) ELSE aoa.name END) AS name, (CASE WHEN x.appttype ='I' 
THEN dg.name ELSE aoa.designation END) AS designation, (CASE WHEN x.appttype ='I' THEN u.email ELSE aoa.email END) AS email, (CASE WHEN x.appttype ='I' 
THEN uod.mobile_no ELSE aoa.contact END) AS mobile_no, (CASE WHEN x.appttype ='I' THEN d.name ELSE aoa.dept END) AS department,alcm.name AS status_name,alcm.priority
,(CASE WHEN x.appttype ='I' THEN null ELSE aoa.address END) AS address
FROM (
SELECT assigner_emp_id,id AS assignee_master_key,assignee_emp_id,(CASE WHEN assignee_type ='I' THEN 'Internal' ELSE 'External' END) AS assignee_type, assignee_type AS appttype,
 assigned_timestamp,completion_timestamp, DATE_FORMAT(assigned_timestamp,'%d-%m-%Y %h:%i:%s %p') AS assigned_date,
 DATE_FORMAT(completion_timestamp,'%d-%m-%Y %h:%i:%s %p') AS completion_date, DATE_FORMAT(actual_completion_timestamp,'%d-%m-%Y %h:%i:%s %p') AS actual_completion_date, task_info, domain, other_info,`status` 
FROM task_master  $where   )x
INNER JOIN users ON x.assigner_emp_id=users.id
LEFT JOIN user_details u ON u.id= x.assignee_emp_id
LEFT JOIN user_other_details uod ON uod.id= x.assignee_emp_id
LEFT JOIN emp_basic_details ebd ON ebd.emp_no= x.assignee_emp_id
LEFT JOIN designations dg ON dg.id=ebd.designation
LEFT JOIN departments_android d ON d.id=u.dept_id
LEFT JOIN task_life_cycle_master alcm ON alcm.id=x.status
LEFT JOIN task_outsider_assignee aoa ON aoa.id=x.assignee_emp_id
ORDER BY alcm.priority DESC, UNIX_TIMESTAMP(x.assigned_timestamp)
     ";            

 
           $query = $this->db->query($sql,$secure_array);
        // echo $this->db->last_query(); die();

        if ($query->num_rows() > 0)
             return $query->result();
        else 
            return 0;
        
    }
	
	
	
	
    function select_dropdown(){
    	if($query=$this->db->get('appoint_life_cycle_master')){
    		if($query->num_rows()>0){
    			return $query->result();
    		}
    		else{
    			return false;
    		}
    	}
    	else{
    		return false;
    	}
	}

	function insert_outsider_on_mis($data,$option='appoint_outsider_appointee'){
		if($this->db->insert($option,$data)){
      return true;
		}
		else{
				return false;
		}
	}

  function insert_appoint_master_on_mis($data,$option='appoint_master'){
	  //print_r($data); echo $option; die();
	  
    if($this->db->insert($option,$data)){
        //return true;
		return $this->db->insert_id();
    }
      else{
        return false;
		//return $this->db->_error_message(); 
      }
    }

   function insert_outsider_on_iitism($outsider,$option='appoint_outsider_appointee'){
      $CI = &get_instance();       
      $this->db2 = $CI->load->database($this->tabulation, TRUE);
      if($this->db2->insert($option,$outsider)){
        return true;
      }
      else{
         return false;
      }
   }

   function insert_appoint_on_iitism($data,$option='appoint_master'){
      $CI = &get_instance();       
      $this->db2 = $CI->load->database($this->tabulation, TRUE);
	  //var_dump$this->db2;die();
      if($this->db2->insert($option,$data)){
		 //echo $this->db->last_query();die();
        return true;   
      }
      else{
		 //echo $this->db2->_error_message(); die();
         return false;
      }
    }

     function outsider_lookup(){
      $q='select a.appoint_outsider_lookup as id from lookup a ';
      if($query=$this->db->query($q)){
        if($query->num_rows()>0){
          $result=$query->result();
		  //echo $result[0]->id;;die();
          return $result[0]->id;
        }
        else{
          return false;
        }
      }
      else{
        return false;
      }
    }

    function update_lookup(){
      $q='update lookup  set  appoint_outsider_lookup=(appoint_outsider_lookup+1) where 1=1';
      if($this->db->query($q)){
        return true;
      }
      else{
        return false;
      }
    }
	
	   function outsider_task_lookup(){
      $q='select a.task_outsider_lookup as id from task_lookup a ';
      if($query=$this->db->query($q)){
        if($query->num_rows()>0){
          $result=$query->result();
		  //echo $result[0]->id;;die();
          return $result[0]->id;
        }
        else{
          return false;
        }
      }
      else{
        return false;
      }
    }

    function update_task_lookup(){
      $q='update task_lookup  set  task_outsider_lookup=(task_outsider_lookup+1) where 1=1';
      if($this->db->query($q)){
        return true;
      }
      else{
        return false;
      }
    }
	
	
	
 function update_appoint_status_by_id($key,$val,$remark,$created,$updatedfor) {      
	  $returntmsg = "";
          $select = $this->db->select('status')->where(array('id'=>$key))->get( ( $updatedfor=='appoint_table'?'appoint_master':'task_master'  ));
        if ($select->num_rows()) {
			 $this->db->trans_strict(true);
             $this->db->trans_start();
            $row = $select->result_array();
             $newObj=new stdClass();    
             $newObj->id=$key;             
			 $newObj->old_status = $row[0]['status'];    
			 $newObj->status = $val;    
			 $newObj->remark=$remark;			 
			 $newObj->created=$created;
             $newObj->created_by=$this->session->userdata('id');		      						
			 
	     $this->db->set(array('status'=>$val, 'update_date'=>$created,  'updated_by'=>$this->session->userdata('id'))); //value that used to update column  
         $this->db->where('id', $key); //which row want to upgrade  
         if(!$this->db->update( ( $updatedfor=='appoint_table'?'appoint_master':'task_master'  ))){  
		 $returntmsg .= $this->db->_error_message() . ",";
		 }						 
		 $affected[] = $this->db->affected_rows();
			 
			 
			 
            if(!$this->db->insert(( $updatedfor=='appoint_table'?'appoint_status_log':'task_status_log'  ), $newObj)){
               $returntmsg .= $this->db->_error_message() . ",";
			}
			   $affected[] = $this->db->affected_rows();     


          $CI = &get_instance();       
         $this->db2 = $CI->load->database($this->tabulation, TRUE);
		 $this->db2->trans_strict(true);
             $this->db2->trans_start();
		 $this->db2->set(array('status'=>$val,  'update_date'=>$created,  'updated_by'=>$this->session->userdata('id'))); //value that used to update column  
         $this->db2->where('id', $key); //which row want to upgrade  
         if(!$this->db2->update( ( $updatedfor=='appoint_table'?'appoint_master':'task_master'  ))){  
		 $returntmsg .= $this->db2->_error_message() . ",";
		 }
		 $affected[] = $this->db2->affected_rows();			 
			 			 
        if(!$this->db2->insert(( $updatedfor=='appoint_table'?'appoint_status_log':'task_status_log'  ), $newObj)){
               $returntmsg .= $this->db2->_error_message() . ",";
			}
			   $affected[] = $this->db2->affected_rows();        

			   
         $this->db2->trans_complete(); 
         $this->db->trans_complete();
        if (in_array(0, $affected) || ($this->db->trans_status() === FALSE || $this->db2->trans_status() === FALSE)){
            $returntmsg .=trim($this->db->_error_message().'False');         
        } else {
            $returntmsg = "success";
        }           
       
      } else{
          $returntmsg = "Internal Error found. ID not found";
      } 
          return $returntmsg;
	  
	  
    }
        
/*
function update_appoint_status_by_id_outsider_on_iitism($key,$val,$remark,$created,$updatedfor) {
    
         $CI = &get_instance();       
         $this->db2 = $CI->load->database($this->tabulation, TRUE);

 $returntmsg = "";
          $select = $this->db->select('status')->where(array('id'=>$key))->get( ( $updatedfor=='appoint_table'?'appoint_master':'task_master'  ));
        if ($select->num_rows()) {
			 $this->db2->trans_strict(true);
             $this->db2->trans_start();
            $row = $select->result_array();
                 $newObj=new stdClass();    
             $newObj->id=$key;             
			 $newObj->old_status = $row[0]['status'];    
			 $newObj->status = $val;    
			 $newObj->remark=$remark;			 
			 $newObj->created=$created;
             $newObj->created_by=$this->session->userdata('id');	    						
			 
	     $this->db2->set(array('status'=>$val,  'update_date'=>$created,  'updated_by'=>$this->session->userdata('id'))); //value that used to update column  
        $this->db2->where('id', $key); //which row want to upgrade  
         if(!$this->db2->update( ( $updatedfor=='appoint_table'?'appoint_master':'task_master'  ))){  
		 $returntmsg .= $this->db2->_error_message() . ",";
		 }
         $affected[] = $this->db2->affected_rows();
			 
			 
			 
            if(!$this->db2->insert(( $updatedfor=='appoint_table'?'appoint_status_log':'task_status_log'  ), $newObj)){
               $returntmsg .= $this->db2->_error_message() . ",";
			}
			   $affected[] = $this->db2->affected_rows();        
         
        $this->db2->trans_complete();
        if (in_array(0, $affected) || ($this->db2->trans_status() === FALSE)){
            $returntmsg .=trim($this->db2->_error_message().'False');         
        } else {
            $returntmsg = "success";
        }           
       
      } else{
          $returntmsg = "Internal Error found. ID not found";
      } 
          return $returntmsg;
	  
    }*/
        



 function appt_lifecycle_rsrc($table='appoint_life_cycle_master'){
         $sql=  " select *  from  $table  order by priority desc ";         
          $query = $this->db->query($sql);

       //echo $this->db->last_query(); die();
        if ($this->db->affected_rows() > 0) {
            return $query->result();
        } else {
            return false;
        }  
         
     }

  function get_auth_id_assignee($id){        
		$query = $this->db->select('auth_id')->get_where('emp_basic_details', array('emp_no' => $id)); 	
	    return ($query->num_rows() === 1?$query->row(): false);		
       }
	   
	   function get_auth_id_assigner($id){        
		$query = $this->db->select("head_auth AS 'auth_id'")->get_where('task_head_assistant_mapping_master', array('head_emp_id' => $id)); 	
	    return ($query->num_rows() === 1?$query->row(): false);		
       }
	   
	   
function head_assistant_mapping_master($id){        
$q="SELECT usr.id AS EMPNO, UCASE(CONCAT(ud.salutation,' ',ud.first_name,' ',ud.middle_name,' ',ud.last_name)) AS NAME
			FROM users usr
			join task_head_assistant_mapping_master mpm on      mpm.head_emp_id=usr.id     and  mpm.staff_emp_id=?
           inner JOIN user_details ud ON ud.id=usr.id "; 
		    if($query=$this->db->query($q,array($id))){
			   if($query->num_rows()>0)
				return $query->result();			
			   else
				return false;
			}
		else
			return false;			
       }	   
	   
	   
	   

}
?>