<?php if(!defined("BASEPATH")){ exit("No direct script access allowed"); }

class Rank_modal extends CI_Model
{
    
    private $course ='courses';
	function __construct()
	{
		// Call the Model constructor
		parent::__construct();
	}
        
         function getCourseDurationById($id){
            
           $q=$this->db->get_where($this->course, array('id'=>$id)); 
           if($q->row()->duration)
               $sem = ($q->row()->duration * 2);
           return (int)$sem;
        
        }
        
        function getStuList(){
         $sem=$this->getCourseDurationById($this->input->post('course'));
            $r=array();$s=array();$p=array();
        $qu="select A.admn_no,name from ((select a.id as admn_no,concat_ws(' ',a.first_name,a.middle_name,a.last_name ) as name from user_details a join reg_regular_form b on a.id=b.admn_no where a.dept_id='".$this->input->post('dept')."' and b.course_id='".$this->input->post('course')."' ANd b.semester='$sem' and b.branch_id='".$this->input->post('branch')."' )
				union
				(select a.id as admn_no,concat_ws(' ',a.first_name,a.middle_name,a.last_name ) as name from user_details a join reg_exam_rc_form b on a.id=b.admn_no where a.dept_id='".$this->input->post('dept')."' and b.course_id='".$this->input->post('course')."' ANd b.semester like '%".$sem."%' and b.branch_id='".$this->input->post('branch')."' ) )A order by A.admn_no
		   ";
		 //  echo $qu; 
            $q=$this->db->query($qu);
            
           if($q->num_rows() > 0)
             return  $q->result();
           
            
           return false;
            
        }
		
		
		////RANK LIST MODUELS MAIN FUNCTIOM ////
		
		function GetStuSatus($sy,$ssem,$esem,$d,$c,$b,$adm_no=null){
				if($adm_no != null && $adm_no !=''){
						$data = array('session_year'=>$sy,'admn_no'=>$adm_no,'acad_status'=>'1','semester'=>$esem);
				}else{
					$data = array('session_year'=>$sy,'course_id'=>$c,'branch_id'=>$b,'acad_status'=>'1','semester'=>$esem);
				}
			
				$this->db->select('admn_no,concat_ws(" ",user_details.first_name,user_details.middle_name,user_details.last_name ) as name,user_details.dept_id,reg_regular_form.course_id,reg_regular_form.branch_id',false);
				$this->db->order_by('admn_no'); 
				$this->db->join('user_details','reg_regular_form.admn_no=user_details.id');
				$q=$this->db->get_where('reg_regular_form',$data);
				
				//echo $this->db->last_query(); die();
				if($q->num_rows() > 0)
					return  $q->result();
           
            
					return false;
			
		}
		
		
		
		
		
		////RANK LIST MODUELS MAIN FUNCTIOM ////
        
        function getTabRes($admn_no,$Hstatus=null,$Mstatus=null){
			
            $this->load->model('exam_tabulation/exam_tabulation_model','tabu');
            $sem=$this->getCourseDurationById($this->input->post('course'));
           $branch = $this->getbranchByAdmn_no($admn_no);
           $branch= $branch->branch_id; 
            for($i=1;$i<=$sem; $i++){
                if($i == 10){
                     $q="select a.ysession,a.examtype,a.totcrhr,a.totcrpts,a.gpa,a.ctotcrhr,a.ctotcrpts,a.ogpa,a.remarks,a.passfail from tabulation1 as a where a.adm_no=? and right(a.sem_code,1)='X'   and a.examtype=((select max(a.examtype) as m from tabulation1 as a where a.adm_no=? and right(a.sem_code,1)='X'  )) limit 1";
                     $qu=$this->db->query($q,array($admn_no,$admn_no));
                }else{
					
				   $q="SELECT a.ysession,a.examtype,a.totcrhr,a.totcrpts,a.gpa,a.ctotcrhr,a.ctotcrpts,a.ogpa,a.remarks,a.passfail,a.sem_code FROM tabulation1 AS a WHERE a.adm_no=? AND RIGHT(a.sem_code,1)=? and a.sem_code not like 'PREP%' order by a.ysession desc,a.examtype desc, a.wsms desc limit 1";
 
					 $qu=$this->db->query($q,array($admn_no,$i));
					 
					//echo $this->db->last_query(); if($adm_no == '2013MT0229') die();
                }
                if($qu->num_rows() > 0){
                    $r[$i]=$qu->row();
                    if($r[$i]->passfail == 'F' || $r[$i]->passfail == 'f'){
                       $etype= $r[$i]->examtype;
                        $rr=$this->getOtherStuRes($admn_no,$i,$etype); 
                        //  echo $this->db->last_query(); die();
						
                        if($rr){
                              unset($r[$i]);
           
                       //   echo  $rr->session_yr; 
						  
                          $r[$i]->ysession = $rr->session_yr;
                          $r[$i]->examtype = $rr->type; 
                          $r[$i]->totcrhr = $rr->tot_cr_hr;
                          $r[$i]->totcrpts =$rr->tot_cr_pts;
                          $r[$i]->gpa = number_format($rr->tot_cr_pts/$rr->tot_cr_hr,2);
                          $r[$i]->ctotcrhr = 0;
                          $r[$i]->ctotcrpts =0;
                          $r[$i]->ogpa = 0;
                          if($rr->status == 'FAIL'){
                              $r[$i]->remarks = $this->failIn($rr->id);
                              $r[$i]->passfail = 'F';
                          } else{
                          $r[$i]->remarks = 'Pass';
                          $r[$i]->passfail = 'P';
                          }
                        }
                    }
                }else{
                    
                      //$rr=$this->tabu->getSubjectsByAdminNo($branch,$i,$admn_no);  
					  $rr=$this->tabu->getSubjectsByAdminNo_With_without_hons($branch,$i,$admn_no,$Hstatus,$session_year=false);
                      if($rr){
                          
                          //$r[$i] = $rr;
                          $tocrpt=0;
                          $tohr=0; $f=0; $s='Fail In ';
                          foreach($rr as $rf){
                             $tocrpt=$tocrpt+$rf->totcrdthr;
                             $tohr = $tohr+$rf->credit_hours;
                            if($rf->grade == 'F'){ $f++ ; $s.= $rf->sub_code." "; }
                            
                            
                          }
                          
                          $r[$i]->ysession = $rr[0]->session_year;
                          $r[$i]->examtype = 'R'; 
                          $r[$i]->totcrhr = $tohr;
                          $r[$i]->totcrpts = $tocrpt;
                          $r[$i]->gpa = number_format($tocrpt/$tohr,2);
                          $r[$i]->ctotcrhr = 0;
                          $r[$i]->ctotcrpts =0;
                          $r[$i]->ogpa = 0;
                          if($f > 0){
                              $r[$i]->remarks = $s;
                              $r[$i]->passfail = 'F';
							   $rr=$this->getOtherStuRes($admn_no,$i,$etype); 
							    if($rr){
								unset($r[$i]);
           
                          
										$r[$i]->ysession = $rr->session_yr;
									    $r[$i]->examtype = $rr->type; 
										$r[$i]->totcrhr = $rr->tot_cr_hr;
										$r[$i]->totcrpts =$rr->tot_cr_pts;
										$r[$i]->gpa = number_format($rr->tot_cr_pts/$rr->tot_cr_hr,2);
										$r[$i]->ctotcrhr = 0;
										$r[$i]->ctotcrpts =0;
										$r[$i]->ogpa = 0;
											if($rr->status == 'FAIL'){
												$r[$i]->remarks = $this->failIn($rr->id);
												$r[$i]->passfail = 'F';
											} else{
												$r[$i]->remarks = 'Pass';
												$r[$i]->passfail = 'P';
											}
								}
                          } else{
                          $r[$i]->remarks = 'Pass';
                          $r[$i]->passfail = 'P';
                          }
                          
                      } else{ $r[$i]=  [];}
                }
            }
            return $r;
            
        }
        
		
		
		
		
		function getStuListSemWise($sem,$sy,$dept,$course,$branch){
      
           
        $qu="select A.admn_no,name from ((select a.id as admn_no,concat_ws(' ',a.first_name,a.middle_name,a.last_name ) as name from user_details a join reg_regular_form b on a.id=b.admn_no where a.dept_id='".$dept."' and b.course_id='".$course."' ANd b.semester='$sem' and b.branch_id='".$branch."' and b.session_year='".$sy."' )
				union
				(select a.id as admn_no,concat_ws(' ',a.first_name,a.middle_name,a.last_name ) as name from user_details a join reg_exam_rc_form b on a.id=b.admn_no where a.dept_id='".$dept."' and b.course_id='".$course."' ANd b.semester like '%".$sem."%' and b.branch_id='".$branch."'  and b.session_year='".$sy."' ) 
				union
				(select a.id as admn_no,concat_ws(' ',a.first_name,a.middle_name,a.last_name ) as name from user_details a join reg_other_form b on a.id=b.admn_no where a.dept_id='".$dept."' and b.course_id='".$course."' ANd b.semester like '%".$sem."%' and b.branch_id='".$branch."'  and b.session_year='".$sy."' ) )A order by A.admn_no
		   ";
		   //echo $qu; 
            $q=$this->db->query($qu);
            
           if($q->num_rows() > 0)
             return  $q->result();
           
            
           return false;
            
        }
		
		
		
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		
		
		
		
		function getTabResSemesterRange($admn_no,$startSem,$endsem,$sy,$dept,$course){
				
				$_POST['session_year'] =$sy;
				$_POST['dept']=$dept;
				$_POST['course']=$course;
				
            $this->load->model('exam_tabulation/exam_tabulation_model','tabu');
            //$sem=$this->getCourseDurationById($this->input->post('course'));
           $branch = $this->getbranchByAdmn_no($admn_no);
           $branch= $branch->branch_id; 
		   if($startSem > $endsem){ //echo "the Range of Semester is not Correct.";
		   return 0; }
            for($i=$startSem;$i<=$endsem; $i++){
                if($i == 10){
                     $q="SELECT a.ysession,a.examtype,a.totcrhr,a.totcrpts,a.gpa,a.ctotcrhr,a.ctotcrpts,a.ogpa,a.remarks,a.passfail,a.sem_code FROM tabulation1 AS a WHERE a.adm_no=? AND RIGHT(a.sem_code,1)='X' and a.sem_code not like 'PREP%' order by a.ysession desc,a.examtype desc, a.wsms desc limit 1";
                     $qu=$this->db->query($q,array($admn_no,$admn_no));
                }else{
									   
				   $q="SELECT a.ysession,a.examtype,a.totcrhr,a.totcrpts,a.gpa,a.ctotcrhr,a.ctotcrpts,a.ogpa,a.remarks,a.passfail,a.sem_code FROM tabulation1 AS a WHERE a.adm_no=? AND RIGHT(a.sem_code,1)=? and a.sem_code not like 'PREP%' order by a.ysession desc,a.examtype desc, a.wsms desc limit 1";
 
					 $qu=$this->db->query($q,array($admn_no,$i));
					 
					
                }
				//print_r($qu->num_rows());  die();
                if($qu->num_rows() > 0){
					
                    $r[$i]=$qu->row();
                    if($r[$i]->passfail == 'F' || $r[$i]->passfail == 'f'){
                       $etype= $r[$i]->examtype;
					   $f=0;
					   
									$rr=$this->getSummerStuRes($admn_no,$i,$etype); 
									//echo "<pre>"; print_r($rr); echo "</pre>";
									//die();
										if($rr){
											
											unset($r[$i]);
           
                          
												$r[$i]->ysession = $rr->session_yr;
												$r[$i]->examtype = $rr->type; 
												$r[$i]->totcrhr = $rr->tot_cr_hr;
												$r[$i]->totcrpts =$rr->tot_cr_pts;
												$r[$i]->gpa = number_format($rr->tot_cr_pts/$rr->tot_cr_hr,2);
												$r[$i]->ctotcrhr = $rr->tot_cr_hr+($r[$i-1]->ctotcrhr);
												$r[$i]->ctotcrpts =$rr->tot_cr_pts+( $r[$i-1]->ctotcrpts);
												$r[$i]->ogpa = number_format(($rr->tot_cr_pts+( $r[$i-1]->ctotcrpts)) / ($rr->tot_cr_hr+($r[$i-1]->ctotcrhr)),2);
											if($rr->status == 'FAIL'){
												$r[$i]->remarks = $this->failIn($rr->id);
												$r[$i]->passfail = 'F'; 
												$f++; 
											} else{
												$r[$i]->remarks = 'Pass';
												$r[$i]->passfail = 'P';
											}
										}else{			
													
											$rr=$this->getOtherStuRes($admn_no,$i,$etype); 
											// echo $this->db->last_query(); die();
						
											if($rr){
											unset($r[$i]);
           
											//   echo  $rr->session_yr; 
						  
											$r[$i]->ysession = $rr->session_yr;
											$r[$i]->examtype = $rr->type; 
											$r[$i]->totcrhr = $rr->tot_cr_hr;
											$r[$i]->totcrpts =$rr->tot_cr_pts;
											$r[$i]->gpa = number_format($rr->tot_cr_pts/$rr->tot_cr_hr,2);
											$r[$i]->ctotcrhr = $rr->tot_cr_hr+($r[$i-1]->ctotcrhr);
											$r[$i]->ctotcrpts =$rr->tot_cr_pts+( $r[$i-1]->ctotcrpts);
											$r[$i]->ogpa = number_format(($rr->tot_cr_pts+( $r[$i-1]->ctotcrpts)) / ($rr->tot_cr_hr+($r[$i-1]->ctotcrhr)),2);
											if($rr->status == 'FAIL'){
												$r[$i]->remarks = $this->failIn($rr->id);
												$r[$i]->passfail = 'F';  
												
											} else{
												$r[$i]->remarks = 'Pass';
												$r[$i]->passfail = 'P';
											}
										}
									}				
										
								
						
                    }
                }else{
                   
                     
					  $rr=$this->tabu->getSubjectsByAdminNo_With_without_hons($branch,$i,$admn_no,'N',$session_year=false);
					  //echo $this->db->last_query();
					  if($endsem >=5 && $i>=5){
						// With honour result;
					   $rh= $this->HonourRes($branch,$i,$admn_no,'N',$session_year=false,$r);
						
								$r[$i]->honour=$rh;
						
					  }
						// With honour result;
						
                      if($rr){
					  
                          
                          //$r[$i] = $rr;
                          $tocrpt=0;
                          $tohr=0; $f=0; $s='Fail In ';
                          foreach($rr as $rf){
                             $tocrpt=$tocrpt+$rf->totcrdthr;
                             $tohr = $tohr+$rf->credit_hours;
                            if($rf->grade == 'F'){ $f++ ; $s.= $rf->sub_code." "; }
                            
                            
                          }
                         
                          $r[$i]->ysession = $rr[0]->session_year;
                          $r[$i]->examtype = 'R'; 
                          $r[$i]->totcrhr = $tohr;
                          $r[$i]->totcrpts = $tocrpt;
                          $r[$i]->gpa = number_format($tocrpt/$tohr,2);
                          $r[$i]->ctotcrhr = $tohr+($r[$i-1]->ctotcrhr);
                          $r[$i]->ctotcrpts =$tocrpt+( $r[$i-1]->ctotcrpts);
                          $r[$i]->ogpa = number_format(($tocrpt+( $r[$i-1]->ctotcrpts)) /($tohr+($r[$i-1]->ctotcrhr)),2) ;
                         // echo $f; die();
						  if($f > 0){
								
								
										$rr=$this->getSummerStuRes($admn_no,$i,$etype); 
										if($rr){ 
											unset($r[$i]);
           
                          
												$r[$i]->ysession = $rr->session_yr;
												$r[$i]->examtype = $rr->type; 
												$r[$i]->totcrhr = $rr->tot_cr_hr;
												$r[$i]->totcrpts =$rr->tot_cr_pts;
												$r[$i]->gpa = number_format($rr->tot_cr_pts/$rr->tot_cr_hr,2);
												$r[$i]->ctotcrhr = $rr->tot_cr_hr+($r[$i-1]->ctotcrhr);
												$r[$i]->ctotcrpts =$rr->tot_cr_pts+( $r[$i-1]->ctotcrpts);
												$r[$i]->ogpa = number_format(($rr->tot_cr_pts+( $r[$i-1]->ctotcrpts)) / ($rr->tot_cr_hr+($r[$i-1]->ctotcrhr)),2);
											if($rr->status == 'FAIL'){
												$r[$i]->remarks = $this->failIn($rr->id);
												$r[$i]->passfail = 'F';
												$f++; 
											} else{
												$r[$i]->remarks = 'Pass';
												$r[$i]->passfail = 'P';
											}
										}else{
								
							 
										  $f=0;
										  $r[$i]->remarks = $s;
										  $r[$i]->passfail = 'F';
										   $rr=$this->getOtherStuRes($admn_no,$i,$etype); 
										     //echo $this->db->last_query(); 
											if($rr){
											unset($r[$i]);
					   
									  
													$r[$i]->ysession = $rr->session_yr;
													$r[$i]->examtype = $rr->type; 
													$r[$i]->totcrhr = $rr->tot_cr_hr;
													$r[$i]->totcrpts =$rr->tot_cr_pts;
													$r[$i]->gpa = number_format($rr->tot_cr_pts/$rr->tot_cr_hr,2);
													$r[$i]->ctotcrhr = $rr->tot_cr_hr+($r[$i-1]->ctotcrhr);
													$r[$i]->ctotcrpts =$rr->tot_cr_pts+( $r[$i-1]->ctotcrpts);
													$r[$i]->ogpa = number_format(($rr->tot_cr_pts+( $r[$i-1]->ctotcrpts)) / ($rr->tot_cr_hr+($r[$i-1]->ctotcrhr)),2);
														if($rr->status == 'FAIL'){
															$r[$i]->remarks = $this->failIn($rr->id);
															$r[$i]->passfail = 'F'; 
														$f++;  	
														} else{
															$r[$i]->remarks = 'Pass';
															$r[$i]->passfail = 'P';
														}
											}
										}
                          }
							
								
								if($f > 0){
										$rr=$this->getSummerStuRes($admn_no,$i,$etype); 
										if($rr){
											unset($r[$i]);
           
                          
												$r[$i]->ysession = $rr->session_yr;
												$r[$i]->examtype = $rr->type; 
												$r[$i]->totcrhr = $rr->tot_cr_hr;
												$r[$i]->totcrpts =$rr->tot_cr_pts;
												$r[$i]->gpa = number_format($rr->tot_cr_pts/$rr->tot_cr_hr,2);
												$r[$i]->ctotcrhr = $rr->tot_cr_hr+($r[$i-1]->ctotcrhr);
												$r[$i]->ctotcrpts =$rr->tot_cr_pts+( $r[$i-1]->ctotcrpts);
												$r[$i]->ogpa = number_format(($rr->tot_cr_pts+( $r[$i-1]->ctotcrpts)) / ($rr->tot_cr_hr+($r[$i-1]->ctotcrhr)),2);
											if($rr->status == 'FAIL'){
												$r[$i]->remarks = $this->failIn($rr->id);
												$r[$i]->passfail = 'F';
												$f++; 
											} else{
												$r[$i]->remarks = 'Pass';
												$r[$i]->passfail = 'P';
											}
										}
								}else{
									$r[$i]->remarks = 'Pass';
									$r[$i]->passfail = 'P';
								}		
							
                          
                      } else{ 
								
					  
								$f=0;
								$rr=$this->getOtherStuRes($admn_no,$i,$etype); 
								
							    if($rr){
								unset($r[$i]);
           
										
										$r[$i]->ysession = $rr->session_yr;
									    $r[$i]->examtype = $rr->type; 
										$r[$i]->totcrhr = $rr->tot_cr_hr;
										$r[$i]->totcrpts =$rr->tot_cr_pts;
										$r[$i]->gpa = number_format($rr->tot_cr_pts/$rr->tot_cr_hr,2);
										$r[$i]->ctotcrhr = $rr->tot_cr_hr+($r[$i-1]->ctotcrhr);
										$r[$i]->ctotcrpts =$rr->tot_cr_pts+( $r[$i-1]->ctotcrpts);
										$r[$i]->ogpa = number_format(($rr->tot_cr_pts+( $r[$i-1]->ctotcrpts)) / ($rr->tot_cr_hr+($r[$i-1]->ctotcrhr)),2);
											if($rr->status == 'FAIL' ){
												$r[$i]->remarks = $this->failIn($rr->id);
												$r[$i]->passfail = 'F';
												$f++;  echo $f."----".$i;
											} else{
												$r[$i]->remarks = 'Pass';
												$r[$i]->passfail = 'P';
											}
								}
								if($f > 0){
										$rr=$this->getSummerStuRes($admn_no,$i,$etype); 
										if($rr){
											unset($r[$i]);
           
                          
												$r[$i]->ysession = $rr->session_yr;
												$r[$i]->examtype = $rr->type; 
												$r[$i]->totcrhr = $rr->tot_cr_hr;
												$r[$i]->totcrpts =$rr->tot_cr_pts;
												$r[$i]->gpa = number_format($rr->tot_cr_pts/$rr->tot_cr_hr,2);
												$r[$i]->ctotcrhr = $rr->tot_cr_hr+($r[$i-1]->ctotcrhr);
												$r[$i]->ctotcrpts =$rr->tot_cr_pts+( $r[$i-1]->ctotcrpts);
												$r[$i]->ogpa = number_format(($rr->tot_cr_pts+( $r[$i-1]->ctotcrpts)) / ($rr->tot_cr_hr+($r[$i-1]->ctotcrhr)),2);
											if($rr->status == 'FAIL'){
												$r[$i]->remarks = $this->failIn($rr->id);
												$r[$i]->passfail = 'F';   
											} else{
												$r[$i]->remarks = 'Pass';
												$r[$i]->passfail = 'P';
											}
										}
								}else{
									$r[$i]=  []; 	
								}					  
					  }
                }
            }
		
            return $r;
            
        }
		
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
		
		
        private function getbranchByAdmn_no($id){
           
           $r=$this->db->get_where('stu_academic',array('admn_no'=>$id));
           if($r->num_rows() >0){
               return $r->row();
           }
       }
	   
	   private function HonourRes($branch,$i,$admn_no,$Hstatus,$session_year=false,$h){
		   
		   $sH=$this->getHonourStatus($admn_no);
		 
							if($sH){
								$rh=$this->tabu->getSubjectsByAdminNo_With_without_hons($branch,$i,$admn_no,'Y',$session_year=false);
								
										 
												$tocrpt=0;
												$tohr=0; $f=0; $s='Fail In ';
									  foreach($rh as $rf){
										 $tocrpt=$tocrpt+$rf->totcrdthr;
										 $tohr = $tohr+$rf->credit_hours;
										if($rf->grade == 'F'){ $f++ ; $s.= $rf->sub_code." "; }
																			
									  }
									 
									  $r->ysession = $rh[0]->session_year;
									  $r->examtype = 'R'; 
									  $r->totcrhr = $tohr;
									  $r->totcrpts = $tocrpt;
									  $r->gpa = number_format($tocrpt/$tohr,2);
									  $r->ctotcrhr = $tohr+($h[$i-1]->ctotcrhr);
									  $r->ctotcrpts =$tocrpt+( $h[$i-1]->ctotcrpts);
									  $r->ogpa = number_format(($tocrpt+( $h[$i-1]->ctotcrpts)) /($tohr+($h[$i-1]->ctotcrhr)),2) ;
									  
									  if($f > 0){
										$rr=$this->getSummerStuRes($admn_no,$i,$etype); 
										if($rr){
											unset($r);
           
                          
												$r->ysession = $rr->session_yr;
												$r->examtype = $rr->type; 
												$r->totcrhr = $rr->tot_cr_hr;
												$r->totcrpts =$rr->tot_cr_pts;
												$r->gpa = number_format($rr->tot_cr_pts/$rr->tot_cr_hr,2);
												$r->ctotcrhr = $rr->tot_cr_hr+($h[$i-1]->ctotcrhr);
												$r->ctotcrpts =$rr->tot_cr_pts+( $h[$i-1]->ctotcrpts);
												$r->ogpa = number_format(($rr->tot_cr_pts+( $h[$i-1]->ctotcrpts)) / ($rr->tot_cr_hr+($h[$i-1]->ctotcrhr)),2);
											if($rr->status == 'FAIL'){
												$r->remarks = $this->failIn($rr->id);
												$r->passfail = 'F';
												$f++; 
											} else{
												$r->remarks = 'Pass';
												$r->passfail = 'P';
											}
										}
									}else{
										$r->remarks = 'Pass';
										$r->passfail = 'P';
									}
									  
                          
							}else{
								$r = 'N/a';
							}
							return $r;
		   
	   }
	   
	   
	   private function getHonourStatus($admn_no){
		 $r=$this->db->get_where('hm_form',array('admn_no'=>$admn_no,'honours'=>'1','honour_hod_status'=>'Y'));
           if($r->num_rows() >0){
               return $r->row();
           }
		   return false;
	   }
       
       private function getOtherStuRes($admn_no,$sem,$etype){
           
           $q="select * from final_semwise_marks_foil where admn_no='$admn_no' and semester='$sem' and `session_yr`=(select max(`session_yr`) from final_semwise_marks_foil where admn_no='$admn_no' and semester='$sem' ) and `type`<>'R' order by `type` desc limit 1" ;
           $r=$this->db->query($q);
            if($r->num_rows() >0){
               $re= $r->row();
               if($re->type == 'O'){
                  $etype++;
                   $re->type=$etype;
               }else if($re->type=='O'){
                   $etype++; $etype++;
                   $re->type=etype;
               }
               return $re;
           }
           return false;
           
       }
	   
	    private function getSummerStuRes($admn_no,$sem,$etype){
           
           $q="select * from final_semwise_marks_foil where admn_no='$admn_no' and semester='$sem' and `type`='R' and session='Summer'  order by `session_yr` desc limit 1 " ;
           $r=$this->db->query($q);
            if($r->num_rows() >0){
               $re= $r->row();
               if($re->type == 'O'){
                  $etype++;
                   $re->type=$etype;
               }else if($re->type=='O'){
                   $etype++; $etype++;
                   $re->type=etype;
               }
               return $re;
           }
           return false;
           
       }
	   
	   
        private function failIn($id){
             $r=$this->db->get_where('final_semwise_marks_foil_desc',array('grade'=>'F','foil_id'=>$id));
           if($r->num_rows() >0){
               $fi= $r->result();
               $re='Fail in ';
               foreach($fi as $f){
                   $re.=$f->sub_code." ";
               }
                   return $re;
           }
        }
}