<?php
/*
 * Generated by CRUDigniter v3.2
 * www.crudigniter.com
 */

class acc_gpf_master_model extends CI_Model
{
    function __construct()
    {
        parent::__construct();
    }
	
	
	
        function update_gpf_year_status($data,$id){
          $this->db->where('id',$id);
          $this->db->update('acc_gpf_year', $data);
        //  echo $this->db->last_query();exit;
          if($this->db->_error_message()){
              return false;
          }else{
              return true;
          }
        }

        function get_gpf_year($parm=null){
        //  echo"parm ". $parm;exit;
          if($parm=="1"){
            $where="where status='1'";
          }else{
            $where="";
          }
          $sql="select * from acc_gpf_year $where order by id desc";
          $query = $this->db->query($sql);
          //echo $this->db->last_query();
            if ($query->num_rows() > 0)
            return $query->result();
            else
            return false;
        }

        function add_gpf_year($data){
          $this->db->select('*');
          $this->db->from('acc_gpf_year');
          $this->db->where($data);
          $cnt = $this->db->get()->num_rows();
          if($cnt==0){
             $this->db->insert('acc_gpf_year', $data);
              if($this->db->affected_rows() > 0){
             return true;
           }else{
             return false;
           }
          }else{
            return false;
          }
        }



    // changes by @abhijet

    function get_prev_yr_balance($fy,$empno){
    //print_r($fy);exit;
    $fyy=$fy;
    $fy=substr($fy,-2);
      $sql="
      select * from acc_gpf_master a
      inner join acc_gpf_interest b on a.EMPNO=b.EMPNO and b.FY='$fyy'
      where a.MON='3' and a.YR='$fy' and a.EMPNO='$empno'
      ";
      $query = $this->db->query($sql);
    //  echo  $this->db->last_query(); die();

        if ($this->db->affected_rows() > 0) {
             return $query->result();
         } else {
             return false;
         }
    }


    function get_emp_gpf_from_pay($emp_no,$month,$year){
      $sql="
      select * from acc_pay_details a
      where a.MON='$month' and a.YR='$year' and a.EMPNO='$emp_no'  order by a.id,a.MON,a.YR desc limit 1
      ";
      $query = $this->db->query($sql);
      //echo  $this->db->last_query(); die();

        if ($this->db->affected_rows() > 0) {
             return $query->result();
         } else {
             return false;
         }
    }

    //end

    /*
     * Get acc_gpf_master by MON
     */
    function get_acc_gpf_master($MON)
    {
        return $this->db->get_where('acc_gpf_master',array('MON'=>$MON))->row_array();
    }

    /*
     * Get all acc_gpf_master
     */
    function get_all_acc_gpf_master()
    {
        $this->db->order_by('MON', 'desc');
        return $this->db->get('acc_gpf_master')->result_array();
    }

    /*
     * function to add new acc_gpf_master
     */
    function add_acc_gpf_master($params)
    {
        $this->db->insert('acc_gpf_master_temp',$params);
        return $this->db->insert_id();
    }

    /*
     * function to update acc_gpf_master
     */
    function update_acc_gpf_master($MON,$params)
    {
        $this->db->where('MON',$MON);
        return $this->db->update('acc_gpf_master_temp',$params);
    }

    /*
     * function to delete acc_gpf_master
     */
    function delete_acc_gpf_master($MON)
    {
        return $this->db->delete('acc_gpf_master',array('MON'=>$MON));
    }

    function get_gpf_details($cond){
    	$this->db->where($cond);
    	if($query=$this->db->get('acc_gpf_master')){
    		if($query->num_rows()>0){
    			return $query->result();
    		}
    		else{
    			return false;
    		}
    	}
    	else{
    		return false;
    	}
    }
    function get_gpf_details_to_show_calculation($fy,$EMPNO){
    	$fy=$fy[0];
        //var_dump($fy);die();
    	$fy['start_from']=date('Y-m-d',strtotime($fy['start_from']));
    	$fy['end_to']=date('Y-m-d',strtotime($fy['end_to']));
    	//var_dump($fy);die();
    	$q="select x.*,(select agi.INTEREST from acc_gpf_interest agi where agi.FY=? and agi.EMPNO=?)as ANNUAL_INTEREST,(SELECT y.rate FROM acc_gpf_interest_rate y WHERE y.date_from<= DATE(CONCAT(2000+x.YR,'-',x.MON,'-','01')) AND y.date_to>= DATE(CONCAT(2000+x.YR,'-',x.MON,'-','01'))) as rate from acc_gpf_master x where x.EMPNO=? and date(concat(2000+x.YR,'-',x.MON,'-01')) between DATE_ADD(?, INTERVAL 1 MONTH)   and DATE_ADD(?, INTERVAL 1 MONTH)   order by DATE(CONCAT(2000+x.YR,'-',x.MON,'-','01'))";

    	if($query=$this->db->query($q,array($fy['fy'],$EMPNO,$EMPNO,$fy['start_from'],$fy['end_to']))){
    		if($query->num_rows()>0){
                #echo $this->db->last_query();die();
    			return $query->result();
    		}
    		else{
                #echo $this->db->last_query();die();
    			return false;
    		}
    	}
    	else{
            #echo $this->db->last_query();die();
    		return false;
    	}

    }
    function get_emp_img_address($id,$MON,$YR)
        {
        $myquery = "SELECT a.id, CONCAT(a.first_name,' ',a.middle_name,' ',a.last_name) AS emp_name,a.photopath, CONCAT(b.line1,'  ',b.line2) AS eaddress
            ,d.name as dept_nm,f.name as emp_desi,(select x.BALANCE from acc_gpf_master x where x.MON=? and x.YR=? and x.EMPNO=?) as opbalance,(select y.GPFNO from acc_gpf_account y where y.EMPNO=?) as GPFNO
            FROM user_details a
            INNER JOIN user_address b ON a.id=b.id
            inner join departments d on d.id=a.dept_id
            inner join emp_basic_details e on e.emp_no=a.id
            inner join designations f on f.id=e.designation
            WHERE a.id=? AND b.`type`='present'";
            $query = $this->db->query($myquery,array($MON,$YR,$id,$id,$id));
            //echo $this->db->last_query();die();
             if ($query->num_rows() > 0) {
                 return $query->row();

             } else {
                 return false;
             }
        }

        function get_emp_details($id)
        {

        $myquery = "SELECT agc.*, a.id, ucase(CONCAT(a.first_name,' ',a.middle_name,' ',a.last_name)) AS emp_name,a.photopath, CONCAT(b.line1,'  ',b.line2) AS eaddress
            ,ucase(d.name) as dept_nm,ucase(f.name) as emp_desi,(select y.GPFNO from acc_gpf_account y where y.EMPNO=?) as GPFNO
            FROM user_details a
            INNER JOIN acc_gpf_account agc ON agc.EMPNO=a.id
            INNER JOIN user_address b ON a.id=b.id
            inner join departments d on d.id=a.dept_id
            inner join emp_basic_details e on e.emp_no=a.id
            inner join designations f on f.id=e.designation
            WHERE a.id=? AND b.`type`='present'";
            if($query = $this->db->query($myquery,array($id,$id))){
                #echo $this->db->last_query();die();
             if ($query->num_rows() > 0) {
                 return $query->row();

             } else {
                 return false;
             }
            }
            else{
                return false;
            }

        }

        function add_gpf_account($data){
            $this->db->where($data['cond']);
            if($query=$this->db->get('acc_gpf_account')){
                if($query->num_rows()>0){
                    $this->db->where($data['cond']);
                    if($this->db->update('acc_gpf_account',$data['record'])){
                        return true;
                    }
                    else{
                        return false;
                    }
                }
                else{
                    if($this->db->insert('acc_gpf_account',$data['record'])){
                        return true;
                    }
                    else{
                        return false;
                    }
                }
            }
        }

        function edit_gpf_account($data){
             $this->db->where($data['cond']);
                if($this->db->update('acc_gpf_account',$data['record'])){
                        return true;
                    }
                    else{
                        return false;
                    }
        }

    function get_gpf_account_details(){
        $myquery = "SELECT agc.*, UCASE(CONCAT(a.first_name,' ',a.middle_name,' ',a.last_name)) AS emp_name,a.photopath, UCASE(d.name) AS dept_nm, UCASE(f.name) AS emp_desi FROM acc_gpf_account agc INNER JOIN user_details a  ON agc.EMPNO=a.id
            INNER JOIN departments d ON d.id=a.dept_id
            INNER JOIN emp_basic_details e ON e.emp_no=a.id
            INNER JOIN designations f ON f.id=e.designation";
        //echo $myquery;die();
        if($query=$this->db->query($myquery)){
            if($query->num_rows()>0){
                return $query->result();
            }
            else{
                return false;
            }
        }
    }

    /*
    * This function takes single paramerer 'fy' an archonomy for 'Financial Year'
    * The function select employee number from table 'acc_gpf_master' based on selection
    */
    function getEmpNoForCalculationInterest($fy){
        //var_dump($fy);die();
        $fy=$fy[0];
        $fy['start_from']=date('Y-m-d',strtotime($fy['start_from']));
        $fy['end_to']=date('Y-m-d',strtotime($fy['end_to']));
        //var_dump($fy);die();
        $q="select x.EMPNO from acc_gpf_master x where date(concat(2000+x.YR,'-',x.MON,'-01')) between DATE_ADD(?, INTERVAL 1 MONTH)   and DATE_ADD(?, INTERVAL 1 MONTH)  group by x.EMPNO ";

        if($query=$this->db->query($q,array($fy['start_from'],$fy['end_to']))){
            if($query->num_rows()>0){
            //  echo $this->db->last_query();die();
                return $query->result();
            }
            else{
                return false;
            }
        }
        else{
            return false;
        }
    }

    /*
    * This function receives two paramaters first 'data' and other 'fy'
    * The function  check first whether even a single record for the given financial year exist in the table 'acc_gpf_interest'
    * If record exist then first delete all records against the given financial year and the insert data into the table 'acc_gpf_interest'
    * Otherwise simply add records to the table 'acc_gpf_interest'
    * The function returns either 'true' or 'false'
    */
    function updateInterestMaster($data){
      foreach ($data as $d) {
            //  echo "<pre>";print_r($d);
              $whereClouse=array(
                "MON"=>"3",
                "YR"=>substr($d['FY'],-2),
                "EMPNO"=>$d['EMPNO']
              );
              $this->db->select('*');
              $this->db->from('acc_gpf_master');
              $this->db->where($whereClouse);
            //  $this->db->get()->num_rows();
              if($this->db->get()->num_rows() == "1"){
                $this->db->select('*');
                $this->db->from('acc_gpf_master');
                $this->db->where($whereClouse);
                $lastdata=$this->db->get()->result();
                foreach ($lastdata as $lastdata) {
                  // code...
                   $op=$lastdata->OPBALANCE;
                   $pfs=$lastdata->PFSUB;
                   $adv_ref=$lastdata->ADVREF;
                   $adv_withd=$lastdata->ADVWT;
                }
                $interest=$d['INTEREST'];
                $clb=($pfs+$op+$interest+$adv_ref)-$adv_withd;
                $updateValue=array(
                  "INTEREST"=>$interest,
                  "BALANCE"=>$clb,
                );
                $this->db->where($whereClouse);
                $this->db->update('acc_gpf_master', $updateValue);
              //  echo "<pre>";print_r($updateValue);
              }else{
              //  echo "no";
              }
            //  print_r($whereClouse); exit;
      }
    }
    function insertGFPInterest($data,$fy){
    //  echo"<pre>";print_r($data); exit;
      $this->db->where('FY',$fy);
        if($query=$this->db->get('acc_gpf_interest')){
        //  echo "if";
            if($query->num_rows()>0){
                $this->db->where('FY',$fy);
                if($this->db->delete('acc_gpf_interest')){
                    foreach ($data as $r) {
                     $this->db->insert('acc_gpf_interest',$r);
                  //  echo $this->db->last_query(); exit;

                    }
                    $this->updateInterestMaster($data);
                    return true;
                }
                else{
                    return false;
                }
            }
            else{
            //  echo "hooo";
                foreach ($data as $r) {
                     $this->db->insert('acc_gpf_interest',$r);

                      // echo $this->db->last_query(); exit;
                }
                 $this->updateInterestMaster($data);
                return true;
            }
        }
        else{ //echo "else";exit;
            foreach ($data as $r) {
                $this->db->insert('acc_gpf_interest',$r);

              //    echo $this->db->last_query(); exit;
            }
            $this->updateInterestMaster($data);
            return true;
        }



    }

    function getGpfInterest($fy){
        $this->db->where('FY',$fy);
        if($query=$this->db->get('acc_gpf_interest')){
            if($query->num_rows()>0){
                return $query->result();
            }
            else{
                return false;
            }
        }
    }

    function getLetestMonYRFromSalary(){
        $q="select x.YR,max(MON) as MON from acc_pay_details apd,(select max(a.YR) as YR from acc_pay_details a) as x where apd.YR=x.YR";
        if($query=$this->db->query($q)){
            if($query->num_rows()>0){
                return $query->result();
            }
            else{
                return false;
            }
        }
        else{
            return false;
        }
    }
/*
    Returns last month and year from acc_gpf_master table
*/
    function getLastMonYRFromGPF(){
        $q="select x.YR,max(MON) as MON from acc_gpf_master apd,(select max(a.YR) as YR from acc_gpf_master a) as x where apd.YR=x.YR";
        if($query=$this->db->query($q)){
            #echo $this->db->last_query(); die();
            if($query->num_rows()>0){
                return $query->result();
            }
            else{
                return false;
            }
        }
        else{
            return false;
        }
    }
/*
    Check whether GPF Data exist or not on MIS against given month and year or not.
*/
    function checkAvabilityInSalary($data){
        $mon=$yr=0;
        if($data->MON==12){
            $mon=1;
            $yr=$data->YR+1;
        }
        else{
            $mon=$data->MON+1;
        }
       /* Month Wise Import*/
        $q="select ? as MON,? as YR,apd.EMPNO, apd.PFD,apd.PFR from acc_pay_details apd where apd.MON=? and apd.YR=?";
        if($query=$this->db->query($q,array($mon,$yr,$data->MON,$data->YR))){

        /*Query to import all gpf data from salary table
        $q="select MON, YR,apd.EMPNO, apd.PFD,apd.PFR from acc_pay_details apd";
        if($query=$this->db->query($q,array($mon,$yr,$data->MON,$data->YR))){
        */
            #echo $this->db->last_query(); die();
            if($query->num_rows()>0){
                return 1;
            }
            else{
                return 2;
            }
        }
        else{
            return false;
        }
    }
/*
    Wheck Whether Financial Year Changed or Not.
*/
    function checkFYChange($data){
        $q="select * from acc_fyear_details afd where EXTRACT(MONTH FROM afd.start_from)=? and EXTRACT(YEAR FROM afd.start_from)=?";
        #$q="select * from acc_fyear_details afd where EXTRACT(MONTH FROM afd.start_from)=03 and EXTRACT(YEAR FROM afd.start_from)=2018";
        if($query=$this->db->query($q,array($data->MON,2000+$data->YR))){
        #if($query=$this->db->query($q)){
            #echo $this->db->last_query(); die();
            if($query->num_rows()>0){
                return $query->result_array();
            }
            else{
                return false;
            }
        }
        else{
            return false;
        }

    }
/*
    To find previous financial year of the geven financial year.
*/
    function getPreviousFY($fy){
        $q="select afd.fy from acc_fyear_details afd where CAST(substr(afd.fy,6,7) AS INT)=CAST(substr(?,3,4) AS INT)";
        #$q="select * from acc_fyear_details afd where EXTRACT(MONTH FROM afd.start_from)=03 and EXTRACT(YEAR FROM afd.start_from)=2018";
        if($query=$this->db->query($q,$fy)){
        #if($query=$this->db->query()){
            #echo $this->db->last_query(); die();
            if($query->num_rows()>0){
                return $query->result();
            }
            else{
                return false;
            }
        }
        else{
            return false;
        }
    }

    function getNextFY($fy){

    }

    /*
    @Check avability of interest in acc_gpf_interest against given financial year.
    */

    function checkInterestAvaibility($fy){
        $this->db->where('FY',$fy);
        if($query=$this->db->get('acc_gpf_interest')){
        //echo  $this->db->last_query(); exit;
            if($query->num_rows()>0){
                return true;
            }
            else{
                return false;
            }
        }

    }

    function deleteInterest($fy){
        $this->db->where('FY',$fy);
        if($this->db->delete('acc_gpf_interest')){
            return true;
        }
        else{
            return false;
        }
    }

    function storeGPFToTemp($fy,$GPFMonYr){
        $GPFMON=$GPFYR=0;
        $PAYMON=$GPFMonYr->MON;
        $PAYYR=$GPFMonYr->YR;
        if($GPF->MON==12){
            $GPFMON=1;
            $GPFYR=$GPFMonYr->YR+1;
        }
        else{
            $GPFMON=$GPFMonYr->MON+1;
            $GPFYR=$GPFMonYr->YR;
        }

/*    $q=" INSERT INTO acc_gpf_master_temp(EMPNO,MON,YR,PREVMON,PREVYR,PFSUB,ADVREF,INTEREST,OPBALANCE)
        (SELECT apd.EMPNO,? AS MON,? AS YR,? as PREVMON,? asPREVYR,apd.PFD AS PFSUB,apd.PFR AS ADVREF,case when (
        SELECT A.INTEREST
        FROM acc_gpf_interest A
        WHERE A.FY=? AND cast(A.EMPNO as int)=cast(apd.EMPNO as int)) is null then 0 else (
        SELECT A.INTEREST
        FROM acc_gpf_interest A
        WHERE A.FY=? AND cast(A.EMPNO as int)=cast(apd.EMPNO as int)) end AS INTEREST,((
        SELECT case when A.INTEREST is null then 0 else A.INTEREST end as INTEREST
        FROM acc_gpf_interest A
        WHERE A.FY=? AND cast(A.EMPNO as int)=cast(apd.EMPNO as int))+(
        SELECT case when B.BALANCE is null then 0 else B.BALANCE end as BALANCE
        FROM acc_gpf_master B
        WHERE B.MON=? AND B.YR=? AND cast(B.EMPNO as int)=cast(apd.EMPNO as int))) AS OPBALANCE
        FROM acc_pay_details apd
        WHERE apd.MON=? AND apd.YR=? AND (apd.PFD>0 OR apd.PFR>0))"; */
      //  echo "hello";
        $q="INSERT INTO acc_gpf_master_temp(EMPNO,MON,YR,PREVMON,PREVYR,PFSUB,ADVREF,INTEREST,OPBALANCE)
        (SELECT apd.EMPNO,? AS MON,? AS YR,? as PREVMON,? as PREVYR,apd.PFD AS PFSUB,apd.PFR AS ADVREF,
        '0' AS INTEREST,((
        SELECT case when A.INTEREST is null then 0 else A.INTEREST end as INTEREST
        FROM acc_gpf_interest A
        WHERE A.FY=? AND cast(A.EMPNO as int)=cast(apd.EMPNO as int))+(
        SELECT case when B.BALANCE is null then 0 else B.BALANCE end as BALANCE
        FROM acc_gpf_master B
        WHERE B.MON=? AND B.YR=? AND cast(B.EMPNO as int)=cast(apd.EMPNO as int))) AS OPBALANCE
        FROM acc_pay_details apd
        WHERE apd.MON=? AND apd.YR=? AND (apd.PFD>0 OR apd.PFR>0))";
        if($this->clearGPFTemp()){
//            if($query=$this->db->query($q,array($GPFMON,$GPFYR,$PAYMON,$PAYYR,$fy,$fy,$fy,$PAYMON,$PAYYR,$PAYMON,$PAYYR))){
        if($query=$this->db->query($q,array($GPFMON,$GPFYR,$PAYMON,$PAYYR,$fy,$PAYMON,$PAYYR,$PAYMON,$PAYYR))){

            #  echo $this->db->last_query();die();
                if($this->updateBalance()){
                    return true;
                }
                else{
                    return false;
                }
            }
            else{
                return false;
            }
       }
       else{
        return false;
       }
    }

    function storeGPFToTempGen($fy,$GPFMonYr){
        #var_dump($GPFMonYr);die();
        $GPFMON=$GPFYR=0;
        $PAYMON=$GPFMonYr->MON;
        $PAYYR=$GPFMonYr->YR;
        if($GPFMonYr->MON==12){
            $GPFMON=1;
            $GPFYR=$GPFMonYr->YR+1;
        }
        else{
            $GPFMON=$GPFMonYr->MON+1;
            $GPFYR=$GPFMonYr->YR;
        }
        /* Query stopped to compute gpf=0 contibution 15-01-2018 by sourav
        $q=" INSERT INTO acc_gpf_master_temp(EMPNO,MON,YR,PREVMON,PREVYR,PFSUB,ADVREF,OPBALANCE) (SELECT apd.EMPNO,? AS MON,? AS YR,? as PREVMON,? asPREVYR, apd.PFD AS PFSUB,apd.PFR AS ADVREF,(
        SELECT case when B.BALANCE is null then 0 else B.BALANCE end as BALANCE
        FROM acc_gpf_master B
        WHERE B.MON=? AND B.YR=? AND cast(B.EMPNO as int)=cast(apd.EMPNO as int)) AS OPBALANCE
        FROM acc_pay_details apd
        WHERE apd.MON=? AND apd.YR=? AND (apd.PFD>0 OR apd.PFR>0))";
        */

     /*   $q=" INSERT INTO acc_gpf_master_temp(EMPNO,MON,YR,PREVMON,PREVYR,PFSUB,ADVREF,OPBALANCE) (SELECT apd.EMPNO,? AS MON,? AS YR,? as PREVMON,? asPREVYR, apd.PFD AS PFSUB,apd.PFR AS ADVREF,(
        SELECT case when B.BALANCE is null then 0 else B.BALANCE end as BALANCE
        FROM acc_gpf_master B
        WHERE B.MON=? AND B.YR=? AND cast(B.EMPNO as int)=cast(apd.EMPNO as int)) AS OPBALANCE
        FROM acc_pay_details apd
        WHERE apd.MON=? AND apd.YR=? AND (PFACNO IS NOT NULL AND PFACNO <> ' '))"; */
		
		$q=" INSERT INTO acc_gpf_master_temp(EMPNO,MON,YR,PREVMON,PREVYR,PFSUB,ADVREF,OPBALANCE)
        select z.EMPNO,z.MON,z.YR,z.PREVMON,z.asPREVYR,z.PFSUB,z.ADVREF,(case when z.MON=4 then (z.OPBALANCE+z.interest) else z.OPBALANCE end) as OPBALANCE from
        (SELECT apd.EMPNO,? AS MON,? AS YR,? as PREVMON,? asPREVYR, apd.PFD AS PFSUB,apd.PFR AS ADVREF,(
        SELECT case when B.BALANCE is null then 0 else B.BALANCE end as BALANCE
        FROM acc_gpf_master B
        WHERE B.MON=? AND B.YR=? AND cast(B.EMPNO as int)=cast(apd.EMPNO as int)) AS OPBALANCE,
        (CASE WHEN MON=3 THEN (
          SELECT INTEREST
          FROM acc_gpf_interest
          WHERE FY='2019-20' AND EMPNO=CAST(apd.EMPNO AS INT)) ELSE 0 END) AS interest
        FROM acc_pay_details apd
        WHERE apd.MON=? AND apd.YR=? AND (PFACNO IS NOT NULL AND PFACNO <> ' ')) z";


        if($this->clearGPFTemp()){
        #  exit;
            if($query=$this->db->query($q,array($GPFMON,$GPFYR,$PAYMON,$PAYYR,$PAYMON,$PAYYR,$PAYMON,$PAYYR))){
          //echo $this->db->last_query();die();
                if($this->updateBalance()){
                    return true;
                }
                else{
                    return false;
                }
            }
            else{
                return false;
            }
       }
       else{
        return false;
       }
    }

    function updateBalance(){
        $q="update acc_gpf_master_temp agm set agm.BALANCE=agm.OPBALANCE+ agm.PFSUB + agm.ADVREF - agm.ADVWT";
        if($this->db->query($q)){
            #echo $this->db->last_query(); die();
            return true;
        }
        else{
            return false;
        }
    }

    function getDataFromTemp(){
        $q="SELECT agm.*,aga.GPFNO, UCASE(CONCAT(ud.first_name,' ',ud.middle_name,' ',ud.last_name)) AS NAME, (
            SELECT dpt.name
            FROM departments dpt
            WHERE dpt.id=ud.dept_id) AS DEPT
            FROM acc_gpf_master_temp agm
            LEFT JOIN user_details ud ON ud.id=agm.EMPNO
            LEFT JOIN acc_gpf_account aga ON aga.EMPNO=agm.EMPNO";
        if($query=$this->db->query($q)){
            if($query->num_rows()>0){

                return $query->result();
            }
            else{
                return false;
            }
        }
        else{
            return false;
        }
    }


    function getGPFDetails($EMPNO){
        $q="SELECT agm.*,aga.GPFNO, UCASE(CONCAT(ud.first_name,' ',ud.middle_name,' ',ud.last_name)) AS NAME, (
            SELECT dpt.name
            FROM departments dpt
            WHERE dpt.id=ud.dept_id) AS DEPT
            FROM acc_gpf_master_temp agm
            LEFT JOIN user_details ud ON ud.id=agm.EMPNO
            LEFT JOIN acc_gpf_account aga ON aga.EMPNO=agm.EMPNO where agm.EMPNO=?";
            if($query=$this->db->query($q,$EMPNO)){
                if($query->num_rows()>0){
                return $query->result_array();
            }
            else{
                return false;
            }
        }
    }

    function editGPFDetails($cond,$record){
        $this->db->set($record);
        $this->db->where($cond);
        if($this->db->update('acc_gpf_master_temp')){
            return true;
        }
        else{
            return false;
        }

    }
    function clearGPFTemp(){
        $q='delete from acc_gpf_master_temp where 1=1';
        if($this->db->query($q)){
            return true;
        }
        else{
            return false;
        }
    }

    function isexist(){
        $q='select agm.MON,agm.YR from acc_gpf_master_temp agm limit 1';
        if($query=$this->db->query($q)){
            if($query->num_rows()>0){
               $result=$query->result_array();
               $q="select * from acc_gpf_master agm where agm.MON=? and agm.YR=?";
               if($query=$this->db->query($q,array($result[0]->MON,$result[0]->YR))){
                if($query->num_rows()>0){
                    return true;
                }
                else{
                    return false;
                }
               }
            }
            else{
                return false;
            }
        }
    }

    function publish(){
        $q="insert into acc_gpf_master (select * from acc_gpf_master_temp)";
        if($this->db->query($q)){
            $this->clearGPFTemp();
            return true;
        }
        else{
            return false;
        }
    }

    function delete($EMPNO){
        $this->db->where('EMPNO',$EMPNO);
        if($this->db->delete('acc_gpf_master_temp')){
            return true;
        }
        else{
            return false;
        }
    }

    function checkExistanceOfInterest($fy){
        //echo "Hello";
        //echo $fy;die();
        $q="select agi.* from acc_gpf_interest agi where agi.FY=?";
        if($query=$this->db->query($q,array($fy))){
            //echo $this->db->last_query();die();
            if($query->num_rows()>0){
                return true;
            }
            else{
                return false;
            }
        }
        else{
             //echo $this->db->last_query();die();
            return false;
        }
    }

    function getGPFFromMain($EMPNO){
        $q="select agm.* from acc_gpf_master agm where agm.EMPNO=? ORDER BY DATE(CONCAT(2000+agm.YR,'-',agm.MON,'-','01'))  desc limit 24";
        if($query=$this->db->query($q,array($EMPNO))){
            if($query->num_rows()>0){
                return $query->result();
            }
            else{
                return false;
            }
        }
        else{
            return false;
        }
    }

    function save_gpf_permanent($data){
        if($this->db->insert('acc_gpf_master',$data)){
            return true;
        }
        else{
            return false;
        }
    }

	function getRates($fy){
        $q="select * from acc_gpf_interest_rate x where x.fy=?";
        if($query=$this->db->query($q,array($fy))){
            if($query->num_rows()>0){
                return $query->result();
            }
            else{
                return false;
            }
        }
        else{
            return false;
        }
    }
}
