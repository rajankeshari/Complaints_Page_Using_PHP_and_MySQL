<?php 
class Marks_upload_main_process extends CI_Model{
  
    private $marksMaster = 'marks_master';
    private $marksDes = 'marks_subject_description';
    private $dipankarSir = 'marksentry';
    private $semcode = 'dip_m_semcode';
    private $subjects = 'subjects';
    private $courseSt = 'course_structure';
    private $stu_a = 'stu_academic';
            
        function insertMarksMaster($data){
        if($this->db->insert($this->marksMaster,$data)){
            return true;
        }
        return false;
    }
    
    function updateMarksMaster($data,$con){
       if($this->db->update($this->marksMaster,$data,$con)){
           return true;
       }
       return false;
    }
    
    function getMarksMaster($con=''){
        
        if(is_array($con)){
          $q= $this->db->get_where($this->marksMaster,$con);
        }else{
            $q=$this->db->get($this->marksMaster);
        }
        if($q->num_rows() >0){
            return $q->row();
        }
            return false;
    }
    
    function insertMarksDesInsert($data){
        if($this->db->insert_batch($this->marksDes,$data)){
            return true;
        }
        return false;
    }
    
    function updateMarksDes($data,$con){
       if($this->db->update($this->marksDes,$data,$con)){
           return true;
       }
       return false;
    }
    
    function getMarksDes($con=''){
         if(is_array($con)){
          $q= $this->db->get_where($this->marksDes,$con);
        }else{
            $q=$this->db->get($this->marksDes);
        }
        if($q->num_rows() >0){
            return $q->result();
        }
            return false;
    }
    
    function userDetailsById($id){
          $q= $this->db->get_where('user_details',array('id'=>$id));
          if($q->num_rows() >0){
            return $q->row();
        }
        return false;
          
    }
    
    function sumfields($id,$type,$markId,$maindata){
      //   print_r($_POST);
       
        if($type != 'U'){
        $total=$this->db->query("select a.admn_no,a.sub_type,(case when a.sessional is null then '0' else a.sessional end) as sessional,(case  when a.theory is null then '0' else a.theory end) as theory,(case  when a.practical is null then '0' else a.practical end) as practical,(sum((case  when a.sessional is null then '0' else a.sessional end))+sum((case  when a.theory is null then '0' else a.theory end))+sum((case when a.practical is null then '0' else a.practical end))) as total from marks_subject_description as a where id=?",array($id))->row();
        //echo $total->total."tt";
        //echo $this->db->last_query();
        $Max = $this->getMaxNumber($markId);
        if($total->total > $Max){
            $Max = $total->total;
        }
        $grade=$this->getGrade($Max,$total);
      //  echo $this->db->last_query();
        $this->updateMarksDes(array('total'=>$total->total,'grade'=>$grade), array('id'=>$id));
        $data['total'] = $total->total;
        $data['Max'] = $Max;
        if($total->total > $Max){
            
        }else{
        $data['grade']= $grade;
        }
        //dipankarSir Processing Start//
        $maindata['admn_no']=$total->admn_no;
        $maindata['total']=$total->total;
        $maindata['type']=$type;
        
        $this->DipankarSirProcess($this->input->post('course'), $this->input->post('branch'), $this->input->post('semester'), $this->input->post('sub_id'), $maindata, $id);
        //End DipankarSir Process//
        return $data;
        }else{
         $total= $this->db->get_where($this->marksDes,array('id'=>$id))->row();
          $Max = $this->getMaxNumber($markId);
        $grade=$this->getGrade($Max,$total);
        $this->updateMarksDes(array('total'=>$total->total,'grade'=>$grade), array('id'=>$id));
        $data['total'] = $total->total;
        $data['Max'] = $Max;
        $data['grade']= $grade;
         //dipankarSir Processing Start//
        $maindata['admn_no']=$total->admn_no;
        $maindata['total']=$total->total;
        $maindata['type']=$type;
        
        $this->DipankarSirProcess($this->input->post('course'), $this->input->post('branch'), $this->input->post('semester'), $this->input->post('sub_id'), $maindata, $id);
        //End DipankarSir Process//
        return $data;
        }
    }
    
    function getMaxNumber($marksId){
       // echo $marksId;
        $q=$this->db->select_max('total', 'Max')->get_where($this->marksDes,array('marks_master_id'=>$marksId))->row();
        return $q->Max;
    }
    
    function getGrade($max,$res,$session='2013_2014'){
     //  print_r($res);
        $get = $res->total;
        $admnNo = $res->admn_no;
        $r=$this->getStuacademic(array('admn_no' => $admnNo));
        //check Grading Type//
        if($r->grading_type == 'N'){
            if(substr($admnNo,0,4) <= '2012'){
                if($r->auth_id!='prep' && ($r->semester == '7' || $r->semester == '9')){
                    // echo $res->sub_type;    
                    if($res->sub_type=="T"){
                    if(((int)$res->sessional) < 14){ 
                        $grade = 'F';
                    }else if(((int)$res->theory) < 21){
                         $grade = 'F';
                    }else if(((int)$res->total) < 35){
                        $grade = 'F';
                    }else if(((int)$get) > 90 && ((int)$get) <= 100){
                            $grade = 'A+';
                        }else if(((int)$get) > 80 && ((int)$get) <= 90){
                            $grade = 'A';
                        }else if(((int)$get) > 70 && ((int)$get) <= 80){
                            $grade = 'B+';
                        }else if(((int)$get) > 60 && ((int)$get) <= 70){
                            $grade = 'B';
                        }else if(((int)$get) > 50 && ((int)$get) <= 60){
                            $grade = 'C+';
                        }else if(((int)$get) > 40 && ((int)$get) <= 50){
                            $grade = 'C';
                        }else if(((int)$get) > 34 && ((int)$get) <= 40){
                            $grade = 'D';
                        }else{
                            $grade ='F';
                    }
                }else{
                    if(((int)$res->total) < 35){
                        $grade = 'F';
                    }else if(((int)$get) > 90 && ((int)$get) <= 100){
                            $grade = 'A+';
                        }else if(((int)$get) > 80 && ((int)$get) <= 90){
                            $grade = 'A';
                        }else if(((int)$get) > 70 && ((int)$get) <= 80){
                            $grade = 'B+';
                        }else if(((int)$get) > 60 && ((int)$get) <= 70){
                            $grade = 'B';
                        }else if(((int)$get) > 50 && ((int)$get) <= 60){
                            $grade = 'C+';
                        }else if(((int)$get) > 40 && ((int)$get) <= 50){
                            $grade = 'C';
                        }else if(((int)$get) > 34 && ((int)$get) <= 40){
                            $grade = 'D';
                        }else{
                            $grade ='F';
                    }
                }
                       $this->setGradingType('A',$admnNo);                
                   
                }else{
                   if($res->sub_type == 'T'){
                if ($res->theory < 21) {
                    $grade = 'F';
                } else if ($res->total < 35) {
                    $grade = 'F';
                } else {
                    $q = $this->db->query("select * from relative_grading_table as a where a.highest_marks=? and ? BETWEEN `a`.`min` and `a`.`max` and a.effected_form=?", array($max, $get, $session))->row();
                    $grade = $q->grade;
                    }
                }else{
                    $q = $this->db->query("select * from relative_grading_table as a where a.highest_marks=? and ? BETWEEN `a`.`min` and `a`.`max` and a.effected_form=?", array($max, $get, $session))->row();
                    $grade = $q->grade;
                }
                    $this->setGradingType('R',$admnNo);       
                }
            }else{        
       // echo $max."-".$get;
               if($res->sub_type == 'T'){
                if ($res->theory < 21) {
                    $grade = 'F';
                } else if ($res->total < 35) {
                    $grade = 'F';
                } else {
                    $q = $this->db->query("select * from relative_grading_table as a where a.highest_marks=? and ? BETWEEN `a`.`min` and `a`.`max` and a.effected_form=?", array($max, $get, $session))->row();
                    $grade = $q->grade;
                    }
                }else{
                    $q = $this->db->query("select * from relative_grading_table as a where a.highest_marks=? and ? BETWEEN `a`.`min` and `a`.`max` and a.effected_form=?", array($max, $get, $session))->row();
                    $grade = $q->grade;
                }
                $this->setGradingType('R',$admnNo);                   
            }
        }
        else if($r->grading_type == 'R'){
            if($res->sub_type == 'T'){
            if($res->theory < 21){
             $grade = 'F';   
            }else if($res->total < 35){
             $grade = 'F';   
            }else{
              $q=$this->db->query("select * from relative_grading_table as a where a.highest_marks=? and ? BETWEEN `a`.`min` and `a`.`max` and a.effected_form=?",array($max,$get,$session))->row();
                $grade = $q->grade;
            }
            }else{
                $q=$this->db->query("select * from relative_grading_table as a where a.highest_marks=? and ? BETWEEN `a`.`min` and `a`.`max` and a.effected_form=?",array($max,$get,$session))->row();
                $grade = $q->grade;
            }
            
        }
        else{
             if($res->sub_type=="T"){
                    if(((int)$res->sessional) < 14){ 
                        $grade = 'F';
                    }else if(((int)$res->theory) < 21){
                         $grade = 'F';
                    }else if(((int)$res->total) < 35){
                        $grade = 'F';
                    }else if(((int)$get) > 90 && ((int)$get) <= 100){
                            $grade = 'A+';
                        }else if(((int)$get) > 80 && ((int)$get) <= 90){
                            $grade = 'A';
                        }else if(((int)$get) > 70 && ((int)$get) <= 80){
                            $grade = 'B+';
                        }else if(((int)$get) > 60 && ((int)$get) <= 70){
                            $grade = 'B';
                        }else if(((int)$get) > 50 && ((int)$get) <= 60){
                            $grade = 'C+';
                        }else if(((int)$get) > 40 && ((int)$get) <= 50){
                            $grade = 'C';
                        }else if(((int)$get) > 34 && ((int)$get) <= 40){
                            $grade = 'D';
                        }else{
                            $grade ='F';
                    }
                }else{
                    if(((int)$res->total) < 35){
                        $grade = 'F';
                    }else if(((int)$get) > 90 && ((int)$get) <= 100){
                            $grade = 'A+';
                        }else if(((int)$get) > 80 && ((int)$get) <= 90){
                            $grade = 'A';
                        }else if(((int)$get) > 70 && ((int)$get) <= 80){
                            $grade = 'B+';
                        }else if(((int)$get) > 60 && ((int)$get) <= 70){
                            $grade = 'B';
                        }else if(((int)$get) > 50 && ((int)$get) <= 60){
                            $grade = 'C+';
                        }else if(((int)$get) > 40 && ((int)$get) <= 50){
                            $grade = 'C';
                        }else if(((int)$get) > 34 && ((int)$get) <= 40){
                            $grade = 'D';
                        }else{
                            $grade ='F';
                    }
                }
        }
        
           
        return $grade;
    }
    
    function getStuacademic($con=''){
          if(is_array($con)){
          $q= $this->db->get_where($this->stu_a,$con);
        }else{
            $q=$this->db->get($this->stu_a);
        }
        if($q->num_rows() >0){
            return $q->row();
        }
            return false;
    }
   
    
    private function insertDipkankarSirTable($data){
            if($this->db->insert($this->dipankarSir,$data))
            return true;
        return false;
    }
   private function getdipankarSir($id){
        $q=$this->db->get_where($this->dipankarSir,array('marksid'=>$id));
        if($q->num_rows() >0)
            return true;
        return false;
    }
    
   private function updateDipkankarSir($data,$con){
       if($this->db->update($this->dipankarSir,$data,$con)){
           return true;
       }
       return false;
    }
   private function DipankarSirProcess($c,$b,$s,$subId,$maindata,$markId){
        $semcode = $this->getSemCode($c, $b, $s);
        $subject =$this->getsubject($subId);
        
        $data['YSESSION'] = '1516';
        $data['sem_code'] = $semcode->semcode;
        $data['dept']= $semcode->dept;
        $data['adm_no'] = strtoupper($maindata['admn_no']);
        $data['stu_name']= $this->gatName($maindata['admn_no']);
        $data['wsms']='ms';
        $data['examtype']='R';
        $data['subje_code']=$subject->subject_id;
        $data['subje_orde'] = $this->getSeq($subId);
        $data['subje_name']=$subject->name;
        $data['subje_type']=$maindata['type'];
        $data['ltp']=$subject->lecture."-".$subject->tutorial."-".$subject->practical;
        if (isset($maindata['sessional'])) {
            $data['sessional'] = $maindata['sessional'];
        }else if (isset($maindata['theory'])) {
            $data['theory'] = $maindata['theory'];
        }else if (isset($maindata['practical'])){
            $data['practical'] = $maindata['practical'];
        }   else if(isset($maindata['total'])){
            $data['total'] = $maindata['total'];
        }
        $data['efectfrom']=$this->getEffectivefrom($subId);
        $data['crhrs']=$subject->credit_hours;
        //$data['crpts'];
      //  $data['g_e'];
        
        
        if($this->getdipankarSir($markId)){
           
            $this->updateDipkankarSir($data,array('marksid'=>$markId));                   
        }else{
             $data['marksid'] =$markId;
            $this->insertDipkankarSirTable($data);
        }
        
        
    }
    
    private function getSemCode($course,$branch,$sem){
        $q=$this->db->get_where($this->semcode,array('course'=>$course,'branch'=>$branch,'sem'=>$sem));
        //echo $this->db->last_query();
        if($q->num_rows() > 0){
            return $q->row();
        }
        return false;
    }
    
    private function getsubject($id){
         $q=$this->db->get_where($this->subjects,array('id'=>$id));
        if($q->num_rows() >0){
            return $q->row(); 
        }
        return false;
    }
    
   private function getSeq($id){
         $q=$this->db->get_where($this->courseSt,array('id'=>$id));
        if($q->num_rows() >0){
            if(is_float($this->get_numeric($q->row()->sequence))){
                $r=explode('.',(string)$q->row()->sequence);
                return $r[0];
            }else{
               return   $q->row()->sequence;          
            }
        }
        return false;
    }
   private function getEffectivefrom($id){
       $q=$this->db->get_where($this->courseSt,array('id'=>$id));
        if($q->num_rows() >0){
             $r=explode('_',$q->row()->aggr_id);
               if($r[2] == '2009'){
                   return '0910';
               }else if($r[2] == '2010'){
                   return '1011';
               }else if($r[2] == '2011'){
                   return '1112';
               }else if($r[2] == '2012'){
                   return '1213';
               }else if($r[2] == '2013'){
                   return '1314';
               }else if($r[2] == '2014'){
                   return '1415';
               }else if($r[2] == '2015'){
                   return '1516';
               }else if($r[2] == '2016'){
                   return '1617';
               }else if($r[2] == '2017'){
                   return '1718';
               }
            }
   }
    
    protected function get_numeric($val) {
				if (is_numeric($val)) {
					return $val + 0;
				}
				return 0;
			}
                        
    private function gatName($id){
         $q=$this->db->get_where('user_details',array('id'=>$id));
        if($q->num_rows() >0){
            return strtoupper($q->row()->first_name." ".$q->row()->middle_name." ".$q->row()->last_name);
            }
        return false;
    }
    
    function checkAllMarks($marksId,$t){
        
         if($t=='T'){
            $q=$this->db->query("SELECT * FROM (`marks_subject_description`) WHERE `marks_master_id` = ? AND `sessional` is null AND `theory` is null ",array($marksId));
        }else if($t=='P'){
            $q=$this->db->query("SELECT * FROM (`marks_subject_description`) WHERE `marks_master_id` = ? AND `practical` is null",array($marksId));
        }else{
        $q=$this->db->query("SELECT * FROM (`marks_subject_description`) WHERE `marks_master_id` = ? AND `total` is null",array($marksId));    
        }
        //echo $this->db->last_query();
        if($q->num_rows() > 0){
           $tt= false;
        }
        else{
            $tt= true;
        }
		//var_dump($tt); die();
      return $tt;
    }
    
    function getAllgrade($max,$mapId){
        $q=$this->db->query("update marks_subject_description as a set grade=(select grade from relative_grading_table as b where b.highest_marks=? and a.total between b.min and b.max) where a.marks_master_id=?",array($max,$mapId));
        if($q){
            return true;
        }
            
    }
    
    function setGradingType($type,$id){
        if($this->db->update($this->stu_a,array('grading_type'=>$type),array('admn_no'=>$id)))
                return TRUE;                
        return false;        
    }
	
	  function getStuName($id){
        $q= $this->db->get_where('user_details',array('id'=>$id))->row();
        return $q->first_name." ".$q->middle_name." ".$q->last_name;
    }

    
    function getSubjectId($id){
         $q= $this->db->get_where('subjects',array('id'=>$id))->row();
        return $q->subject_id;
    }
	
	
    function getSection($id){
        $q=$this->db->get_where($this->section,array('admn_no'=>$id));
        if($q->num_rows() > 0)
            return $q->row()->section;
    }   
    
    function getStudept($id){
        $q=$this->db->get_where('user_details',array('id'=>$id))->row();
        return $q->dept_id;
    }
    
  function getregnew($sy,$s,$c,$b,$se,$agr_id,$mid){
      $q="SELECT `admn_no` FROM (`reg_regular_form`) WHERE `session_year` =? AND `session` = ? AND `branch_id` = ? AND `course_id` = ? AND `semester` = ? AND `course_aggr_id` = ? AND `hod_status` = '1' AND `acad_status` = '1' 
and admn_no not in( select admn_no from marks_subject_description as a where a.marks_master_id=?)";
      
      $d=$this->db->query($q,array($sy,$s,$b,$c,$se,$agr_id,$mid));
      if($d->num_rows() >0){
          return $d->result();
      }
      return false;    
      
  }
  
 function  getCommonNew($sy,$s,$se,$sec,$agr_id,$mid){
      $q="SELECT `reg_regular_form`.`admn_no` FROM (`reg_regular_form`) JOIN `stu_section_data` ON `stu_section_data`.`admn_no`=`reg_regular_form`.`admn_no` WHERE `reg_regular_form`.`hod_status` = '1' AND `reg_regular_form`.`acad_status` = '1' AND `reg_regular_form`.`session_year` = ? AND `reg_regular_form`.`session` = ? AND `reg_regular_form`.`semester` = ? AND `stu_section_data`.`section` = ? AND `course_aggr_id` = ? and reg_regular_form.admn_no not in( select admn_no from marks_subject_description as a where a.marks_master_id='45')";
      
        $d=$this->db->query($q,array($sy,$s,$se,$sec,$agr_id,$mid));
      if($d->num_rows() >0){
          return $d->result();
      }
      return false;    
      
  }
  
  function gethonourNew(){
      
  }
  
  function getminorNew(){
      
  }
  
}

?>
